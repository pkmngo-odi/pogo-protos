// Code generated by protoc-gen-go.
// source: networking_envelopes.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of EquippedBadge from data_player.proto

// Ignoring public import of ContactSettings from data_player.proto

// Ignoring public import of PlayerAvatar from data_player.proto

// Ignoring public import of PlayerStats from data_player.proto

// Ignoring public import of Currency from data_player.proto

// Ignoring public import of PlayerCurrency from data_player.proto

// Ignoring public import of PlayerCamera from data_player.proto

// Ignoring public import of PlayerPublicProfile from data_player.proto

// Ignoring public import of DailyBonus from data_player.proto

// Ignoring public import of ItemAward from inventory_item.proto

// Ignoring public import of ItemData from inventory_item.proto

// Ignoring public import of ItemType from inventory_item.proto

// Ignoring public import of ItemId from inventory_item.proto

// Ignoring public import of Request from networking_requests.proto

// Ignoring public import of RequestType from networking_requests.proto

type Signature struct {
	TimestampSinceStart uint64                    `protobuf:"varint,2,opt,name=timestamp_since_start,json=timestampSinceStart" json:"timestamp_since_start,omitempty"`
	LocationFix         []*Signature_LocationFix  `protobuf:"bytes,4,rep,name=location_fix,json=locationFix" json:"location_fix,omitempty"`
	GpsInfo             *Signature_AndroidGpsInfo `protobuf:"bytes,5,opt,name=gps_info,json=gpsInfo" json:"gps_info,omitempty"`
	SensorInfo          *Signature_SensorInfo     `protobuf:"bytes,7,opt,name=sensor_info,json=sensorInfo" json:"sensor_info,omitempty"`
	DeviceInfo          *Signature_DeviceInfo     `protobuf:"bytes,8,opt,name=device_info,json=deviceInfo" json:"device_info,omitempty"`
	ActivityStatus      *Signature_ActivityStatus `protobuf:"bytes,9,opt,name=activity_status,json=activityStatus" json:"activity_status,omitempty"`
	LocationHash1       uint64                    `protobuf:"varint,10,opt,name=location_hash1,json=locationHash1" json:"location_hash1,omitempty"`
	LocationHash2       uint64                    `protobuf:"varint,20,opt,name=location_hash2,json=locationHash2" json:"location_hash2,omitempty"`
	SessionHash         []byte                    `protobuf:"bytes,22,opt,name=session_hash,json=sessionHash,proto3" json:"session_hash,omitempty"`
	Timestamp           uint64                    `protobuf:"varint,23,opt,name=timestamp" json:"timestamp,omitempty"`
	RequestHash         []uint64                  `protobuf:"varint,24,rep,packed,name=request_hash,json=requestHash" json:"request_hash,omitempty"`
	Unknown25           int64                     `protobuf:"varint,25,opt,name=unknown25" json:"unknown25,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0} }

func (m *Signature) GetLocationFix() []*Signature_LocationFix {
	if m != nil {
		return m.LocationFix
	}
	return nil
}

func (m *Signature) GetGpsInfo() *Signature_AndroidGpsInfo {
	if m != nil {
		return m.GpsInfo
	}
	return nil
}

func (m *Signature) GetSensorInfo() *Signature_SensorInfo {
	if m != nil {
		return m.SensorInfo
	}
	return nil
}

func (m *Signature) GetDeviceInfo() *Signature_DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *Signature) GetActivityStatus() *Signature_ActivityStatus {
	if m != nil {
		return m.ActivityStatus
	}
	return nil
}

type Signature_LocationFix struct {
	Provider          string  `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	TimestampSnapshot uint64  `protobuf:"varint,2,opt,name=timestamp_snapshot,json=timestampSnapshot" json:"timestamp_snapshot,omitempty"`
	Latitude          float32 `protobuf:"fixed32,13,opt,name=latitude" json:"latitude,omitempty"`
	Longitude         float32 `protobuf:"fixed32,14,opt,name=longitude" json:"longitude,omitempty"`
	// ??? shows up in struct, dunno where these go
	// float device_speed;
	// float device_course;
	HorizontalAccuracy float32 `protobuf:"fixed32,20,opt,name=horizontal_accuracy,json=horizontalAccuracy" json:"horizontal_accuracy,omitempty"`
	Altitude           float32 `protobuf:"fixed32,21,opt,name=altitude" json:"altitude,omitempty"`
	VerticalAccuracy   float32 `protobuf:"fixed32,22,opt,name=vertical_accuracy,json=verticalAccuracy" json:"vertical_accuracy,omitempty"`
	ProviderStatus     uint64  `protobuf:"varint,26,opt,name=provider_status,json=providerStatus" json:"provider_status,omitempty"`
	// On iOS there are some LocationFixes with unk26=1 and everything else empty
	Floor        uint32 `protobuf:"varint,27,opt,name=floor" json:"floor,omitempty"`
	LocationType uint64 `protobuf:"varint,28,opt,name=location_type,json=locationType" json:"location_type,omitempty"`
}

func (m *Signature_LocationFix) Reset()                    { *m = Signature_LocationFix{} }
func (m *Signature_LocationFix) String() string            { return proto.CompactTextString(m) }
func (*Signature_LocationFix) ProtoMessage()               {}
func (*Signature_LocationFix) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0, 0} }

// don't really care about this since we're not using it
type Signature_AndroidGpsInfo struct {
	TimeToFix     uint64    `protobuf:"varint,1,opt,name=time_to_fix,json=timeToFix" json:"time_to_fix,omitempty"`
	SatellitesPrn []int32   `protobuf:"varint,2,rep,packed,name=satellites_prn,json=satellitesPrn" json:"satellites_prn,omitempty"`
	Azimuth       []float32 `protobuf:"fixed32,3,rep,packed,name=azimuth" json:"azimuth,omitempty"`
	Elevation     []float32 `protobuf:"fixed32,4,rep,packed,name=elevation" json:"elevation,omitempty"`
	Snr           []float32 `protobuf:"fixed32,5,rep,packed,name=snr" json:"snr,omitempty"`
	HasAlmanac    []bool    `protobuf:"varint,6,rep,packed,name=has_almanac,json=hasAlmanac" json:"has_almanac,omitempty"`
	HasEphemeris  []bool    `protobuf:"varint,7,rep,packed,name=has_ephemeris,json=hasEphemeris" json:"has_ephemeris,omitempty"`
	UsedInFix     []bool    `protobuf:"varint,8,rep,packed,name=used_in_fix,json=usedInFix" json:"used_in_fix,omitempty"`
}

func (m *Signature_AndroidGpsInfo) Reset()                    { *m = Signature_AndroidGpsInfo{} }
func (m *Signature_AndroidGpsInfo) String() string            { return proto.CompactTextString(m) }
func (*Signature_AndroidGpsInfo) ProtoMessage()               {}
func (*Signature_AndroidGpsInfo) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0, 1} }

type Signature_SensorInfo struct {
	TimestampSnapshot uint64  `protobuf:"varint,1,opt,name=timestamp_snapshot,json=timestampSnapshot" json:"timestamp_snapshot,omitempty"`
	MagnetometerX     float64 `protobuf:"fixed64,3,opt,name=magnetometer_x,json=magnetometerX" json:"magnetometer_x,omitempty"`
	MagnetometerY     float64 `protobuf:"fixed64,4,opt,name=magnetometer_y,json=magnetometerY" json:"magnetometer_y,omitempty"`
	MagnetometerZ     float64 `protobuf:"fixed64,5,opt,name=magnetometer_z,json=magnetometerZ" json:"magnetometer_z,omitempty"`
	AngleNormalizedX  float64 `protobuf:"fixed64,6,opt,name=angle_normalized_x,json=angleNormalizedX" json:"angle_normalized_x,omitempty"`
	AngleNormalizedY  float64 `protobuf:"fixed64,7,opt,name=angle_normalized_y,json=angleNormalizedY" json:"angle_normalized_y,omitempty"`
	AngleNormalizedZ  float64 `protobuf:"fixed64,8,opt,name=angle_normalized_z,json=angleNormalizedZ" json:"angle_normalized_z,omitempty"`
	AccelRawX         float64 `protobuf:"fixed64,10,opt,name=accel_raw_x,json=accelRawX" json:"accel_raw_x,omitempty"`
	AccelRawY         float64 `protobuf:"fixed64,11,opt,name=accel_raw_y,json=accelRawY" json:"accel_raw_y,omitempty"`
	AccelRawZ         float64 `protobuf:"fixed64,12,opt,name=accel_raw_z,json=accelRawZ" json:"accel_raw_z,omitempty"`
	GyroscopeRawX     float64 `protobuf:"fixed64,13,opt,name=gyroscope_raw_x,json=gyroscopeRawX" json:"gyroscope_raw_x,omitempty"`
	GyroscopeRawY     float64 `protobuf:"fixed64,14,opt,name=gyroscope_raw_y,json=gyroscopeRawY" json:"gyroscope_raw_y,omitempty"`
	GyroscopeRawZ     float64 `protobuf:"fixed64,15,opt,name=gyroscope_raw_z,json=gyroscopeRawZ" json:"gyroscope_raw_z,omitempty"`
	AccelNormalizedX  float64 `protobuf:"fixed64,16,opt,name=accel_normalized_x,json=accelNormalizedX" json:"accel_normalized_x,omitempty"`
	AccelNormalizedY  float64 `protobuf:"fixed64,17,opt,name=accel_normalized_y,json=accelNormalizedY" json:"accel_normalized_y,omitempty"`
	AccelNormalizedZ  float64 `protobuf:"fixed64,18,opt,name=accel_normalized_z,json=accelNormalizedZ" json:"accel_normalized_z,omitempty"`
	AccelerometerAxes uint64  `protobuf:"varint,19,opt,name=accelerometer_axes,json=accelerometerAxes" json:"accelerometer_axes,omitempty"`
}

func (m *Signature_SensorInfo) Reset()                    { *m = Signature_SensorInfo{} }
func (m *Signature_SensorInfo) String() string            { return proto.CompactTextString(m) }
func (*Signature_SensorInfo) ProtoMessage()               {}
func (*Signature_SensorInfo) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0, 2} }

type Signature_DeviceInfo struct {
	DeviceId              string `protobuf:"bytes,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	AndroidBoardName      string `protobuf:"bytes,2,opt,name=android_board_name,json=androidBoardName" json:"android_board_name,omitempty"`
	AndroidBootloader     string `protobuf:"bytes,3,opt,name=android_bootloader,json=androidBootloader" json:"android_bootloader,omitempty"`
	DeviceBrand           string `protobuf:"bytes,4,opt,name=device_brand,json=deviceBrand" json:"device_brand,omitempty"`
	DeviceModel           string `protobuf:"bytes,5,opt,name=device_model,json=deviceModel" json:"device_model,omitempty"`
	DeviceModelIdentifier string `protobuf:"bytes,6,opt,name=device_model_identifier,json=deviceModelIdentifier" json:"device_model_identifier,omitempty"`
	DeviceModelBoot       string `protobuf:"bytes,7,opt,name=device_model_boot,json=deviceModelBoot" json:"device_model_boot,omitempty"`
	HardwareManufacturer  string `protobuf:"bytes,8,opt,name=hardware_manufacturer,json=hardwareManufacturer" json:"hardware_manufacturer,omitempty"`
	HardwareModel         string `protobuf:"bytes,9,opt,name=hardware_model,json=hardwareModel" json:"hardware_model,omitempty"`
	FirmwareBrand         string `protobuf:"bytes,10,opt,name=firmware_brand,json=firmwareBrand" json:"firmware_brand,omitempty"`
	FirmwareTags          string `protobuf:"bytes,12,opt,name=firmware_tags,json=firmwareTags" json:"firmware_tags,omitempty"`
	FirmwareType          string `protobuf:"bytes,13,opt,name=firmware_type,json=firmwareType" json:"firmware_type,omitempty"`
	FirmwareFingerprint   string `protobuf:"bytes,14,opt,name=firmware_fingerprint,json=firmwareFingerprint" json:"firmware_fingerprint,omitempty"`
}

func (m *Signature_DeviceInfo) Reset()                    { *m = Signature_DeviceInfo{} }
func (m *Signature_DeviceInfo) String() string            { return proto.CompactTextString(m) }
func (*Signature_DeviceInfo) ProtoMessage()               {}
func (*Signature_DeviceInfo) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0, 3} }

// Only used in iOS - Android just sends an empty version
type Signature_ActivityStatus struct {
	// all of these had 1 as their value
	StartTimeMs   uint64 `protobuf:"varint,1,opt,name=start_time_ms,json=startTimeMs" json:"start_time_ms,omitempty"`
	UnknownStatus bool   `protobuf:"varint,2,opt,name=unknown_status,json=unknownStatus" json:"unknown_status,omitempty"`
	Walking       bool   `protobuf:"varint,3,opt,name=walking" json:"walking,omitempty"`
	Running       bool   `protobuf:"varint,4,opt,name=running" json:"running,omitempty"`
	Stationary    bool   `protobuf:"varint,5,opt,name=stationary" json:"stationary,omitempty"`
	Automotive    bool   `protobuf:"varint,6,opt,name=automotive" json:"automotive,omitempty"`
	Tilting       bool   `protobuf:"varint,7,opt,name=tilting" json:"tilting,omitempty"`
	Cycling       bool   `protobuf:"varint,8,opt,name=cycling" json:"cycling,omitempty"`
	Status        []byte `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *Signature_ActivityStatus) Reset()                    { *m = Signature_ActivityStatus{} }
func (m *Signature_ActivityStatus) String() string            { return proto.CompactTextString(m) }
func (*Signature_ActivityStatus) ProtoMessage()               {}
func (*Signature_ActivityStatus) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0, 4} }

type AuthTicket struct {
	Start             []byte `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	ExpireTimestampMs uint64 `protobuf:"varint,2,opt,name=expire_timestamp_ms,json=expireTimestampMs" json:"expire_timestamp_ms,omitempty"`
	End               []byte `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (m *AuthTicket) Reset()                    { *m = AuthTicket{} }
func (m *AuthTicket) String() string            { return proto.CompactTextString(m) }
func (*AuthTicket) ProtoMessage()               {}
func (*AuthTicket) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{1} }

type Unknown6Response struct {
	ResponseType int32                      `protobuf:"varint,1,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	Unknown2     *Unknown6Response_Unknown2 `protobuf:"bytes,2,opt,name=unknown2" json:"unknown2,omitempty"`
}

func (m *Unknown6Response) Reset()                    { *m = Unknown6Response{} }
func (m *Unknown6Response) String() string            { return proto.CompactTextString(m) }
func (*Unknown6Response) ProtoMessage()               {}
func (*Unknown6Response) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{2} }

func (m *Unknown6Response) GetUnknown2() *Unknown6Response_Unknown2 {
	if m != nil {
		return m.Unknown2
	}
	return nil
}

type Unknown6Response_Unknown2 struct {
	Unknown1         uint64                                 `protobuf:"varint,1,opt,name=unknown1" json:"unknown1,omitempty"`
	Items            []*Unknown6Response_Unknown2_StoreItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	PlayerCurrencies []*Currency                            `protobuf:"bytes,3,rep,name=player_currencies,json=playerCurrencies" json:"player_currencies,omitempty"`
	Unknown4         string                                 `protobuf:"bytes,4,opt,name=unknown4" json:"unknown4,omitempty"`
}

func (m *Unknown6Response_Unknown2) Reset()                    { *m = Unknown6Response_Unknown2{} }
func (m *Unknown6Response_Unknown2) String() string            { return proto.CompactTextString(m) }
func (*Unknown6Response_Unknown2) ProtoMessage()               {}
func (*Unknown6Response_Unknown2) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{2, 0} }

func (m *Unknown6Response_Unknown2) GetItems() []*Unknown6Response_Unknown2_StoreItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Unknown6Response_Unknown2) GetPlayerCurrencies() []*Currency {
	if m != nil {
		return m.PlayerCurrencies
	}
	return nil
}

type Unknown6Response_Unknown2_StoreItem struct {
	ItemId         string                                     `protobuf:"bytes,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	IsIap          bool                                       `protobuf:"varint,2,opt,name=is_iap,json=isIap" json:"is_iap,omitempty"`
	CurrencyToBuy  *Currency                                  `protobuf:"bytes,3,opt,name=currency_to_buy,json=currencyToBuy" json:"currency_to_buy,omitempty"`
	YieldsCurrency *Currency                                  `protobuf:"bytes,4,opt,name=yields_currency,json=yieldsCurrency" json:"yields_currency,omitempty"`
	YieldsItem     *ItemData                                  `protobuf:"bytes,5,opt,name=yields_item,json=yieldsItem" json:"yields_item,omitempty"`
	Tags           []*Unknown6Response_Unknown2_StoreItem_Tag `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Unknown7       int32                                      `protobuf:"varint,7,opt,name=unknown7" json:"unknown7,omitempty"`
}

func (m *Unknown6Response_Unknown2_StoreItem) Reset()         { *m = Unknown6Response_Unknown2_StoreItem{} }
func (m *Unknown6Response_Unknown2_StoreItem) String() string { return proto.CompactTextString(m) }
func (*Unknown6Response_Unknown2_StoreItem) ProtoMessage()    {}
func (*Unknown6Response_Unknown2_StoreItem) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{2, 0, 0}
}

func (m *Unknown6Response_Unknown2_StoreItem) GetCurrencyToBuy() *Currency {
	if m != nil {
		return m.CurrencyToBuy
	}
	return nil
}

func (m *Unknown6Response_Unknown2_StoreItem) GetYieldsCurrency() *Currency {
	if m != nil {
		return m.YieldsCurrency
	}
	return nil
}

func (m *Unknown6Response_Unknown2_StoreItem) GetYieldsItem() *ItemData {
	if m != nil {
		return m.YieldsItem
	}
	return nil
}

func (m *Unknown6Response_Unknown2_StoreItem) GetTags() []*Unknown6Response_Unknown2_StoreItem_Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Unknown6Response_Unknown2_StoreItem_Tag struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Unknown6Response_Unknown2_StoreItem_Tag) Reset() {
	*m = Unknown6Response_Unknown2_StoreItem_Tag{}
}
func (m *Unknown6Response_Unknown2_StoreItem_Tag) String() string { return proto.CompactTextString(m) }
func (*Unknown6Response_Unknown2_StoreItem_Tag) ProtoMessage()    {}
func (*Unknown6Response_Unknown2_StoreItem_Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{2, 0, 0, 0}
}

type Unknown6 struct {
	RequestType int32              `protobuf:"varint,1,opt,name=request_type,json=requestType" json:"request_type,omitempty"`
	Unknown2    *Unknown6_Unknown2 `protobuf:"bytes,2,opt,name=unknown2" json:"unknown2,omitempty"`
}

func (m *Unknown6) Reset()                    { *m = Unknown6{} }
func (m *Unknown6) String() string            { return proto.CompactTextString(m) }
func (*Unknown6) ProtoMessage()               {}
func (*Unknown6) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{3} }

func (m *Unknown6) GetUnknown2() *Unknown6_Unknown2 {
	if m != nil {
		return m.Unknown2
	}
	return nil
}

type Unknown6_Unknown2 struct {
	EncryptedSignature []byte `protobuf:"bytes,1,opt,name=encrypted_signature,json=encryptedSignature,proto3" json:"encrypted_signature,omitempty"`
}

func (m *Unknown6_Unknown2) Reset()                    { *m = Unknown6_Unknown2{} }
func (m *Unknown6_Unknown2) String() string            { return proto.CompactTextString(m) }
func (*Unknown6_Unknown2) ProtoMessage()               {}
func (*Unknown6_Unknown2) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{3, 0} }

type RequestEnvelope struct {
	StatusCode int32      `protobuf:"varint,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	RequestId  uint64     `protobuf:"varint,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Requests   []*Request `protobuf:"bytes,4,rep,name=requests" json:"requests,omitempty"`
	// Unknown6 is required to get a response.
	// For an example check https://github.com/keyphact/pgoapi/blob/75eba6b5b630841ee4f7c2ea983f15874fb0862d/pgoapi/rpc_api.py#L192-L212
	Unknown6   *Unknown6                 `protobuf:"bytes,6,opt,name=unknown6" json:"unknown6,omitempty"`
	Latitude   float64                   `protobuf:"fixed64,7,opt,name=latitude" json:"latitude,omitempty"`
	Longitude  float64                   `protobuf:"fixed64,8,opt,name=longitude" json:"longitude,omitempty"`
	Altitude   float64                   `protobuf:"fixed64,9,opt,name=altitude" json:"altitude,omitempty"`
	AuthInfo   *RequestEnvelope_AuthInfo `protobuf:"bytes,10,opt,name=auth_info,json=authInfo" json:"auth_info,omitempty"`
	AuthTicket *AuthTicket               `protobuf:"bytes,11,opt,name=auth_ticket,json=authTicket" json:"auth_ticket,omitempty"`
	Unknown12  int64                     `protobuf:"varint,12,opt,name=unknown12" json:"unknown12,omitempty"`
}

func (m *RequestEnvelope) Reset()                    { *m = RequestEnvelope{} }
func (m *RequestEnvelope) String() string            { return proto.CompactTextString(m) }
func (*RequestEnvelope) ProtoMessage()               {}
func (*RequestEnvelope) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{4} }

func (m *RequestEnvelope) GetRequests() []*Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *RequestEnvelope) GetUnknown6() *Unknown6 {
	if m != nil {
		return m.Unknown6
	}
	return nil
}

func (m *RequestEnvelope) GetAuthInfo() *RequestEnvelope_AuthInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

func (m *RequestEnvelope) GetAuthTicket() *AuthTicket {
	if m != nil {
		return m.AuthTicket
	}
	return nil
}

type RequestEnvelope_AuthInfo struct {
	Provider string                        `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	Token    *RequestEnvelope_AuthInfo_JWT `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *RequestEnvelope_AuthInfo) Reset()                    { *m = RequestEnvelope_AuthInfo{} }
func (m *RequestEnvelope_AuthInfo) String() string            { return proto.CompactTextString(m) }
func (*RequestEnvelope_AuthInfo) ProtoMessage()               {}
func (*RequestEnvelope_AuthInfo) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{4, 0} }

func (m *RequestEnvelope_AuthInfo) GetToken() *RequestEnvelope_AuthInfo_JWT {
	if m != nil {
		return m.Token
	}
	return nil
}

type RequestEnvelope_AuthInfo_JWT struct {
	Contents string `protobuf:"bytes,1,opt,name=contents" json:"contents,omitempty"`
	Unknown2 int32  `protobuf:"varint,2,opt,name=unknown2" json:"unknown2,omitempty"`
}

func (m *RequestEnvelope_AuthInfo_JWT) Reset()         { *m = RequestEnvelope_AuthInfo_JWT{} }
func (m *RequestEnvelope_AuthInfo_JWT) String() string { return proto.CompactTextString(m) }
func (*RequestEnvelope_AuthInfo_JWT) ProtoMessage()    {}
func (*RequestEnvelope_AuthInfo_JWT) Descriptor() ([]byte, []int) {
	return fileDescriptor15, []int{4, 0, 0}
}

type ResponseEnvelope struct {
	StatusCode int32               `protobuf:"varint,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	RequestId  uint64              `protobuf:"varint,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	ApiUrl     string              `protobuf:"bytes,3,opt,name=api_url,json=apiUrl" json:"api_url,omitempty"`
	Unknown6   []*Unknown6Response `protobuf:"bytes,6,rep,name=unknown6" json:"unknown6,omitempty"`
	AuthTicket *AuthTicket         `protobuf:"bytes,7,opt,name=auth_ticket,json=authTicket" json:"auth_ticket,omitempty"`
	Returns    [][]byte            `protobuf:"bytes,100,rep,name=returns,proto3" json:"returns,omitempty"`
	Error      string              `protobuf:"bytes,101,opt,name=error" json:"error,omitempty"`
}

func (m *ResponseEnvelope) Reset()                    { *m = ResponseEnvelope{} }
func (m *ResponseEnvelope) String() string            { return proto.CompactTextString(m) }
func (*ResponseEnvelope) ProtoMessage()               {}
func (*ResponseEnvelope) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{5} }

func (m *ResponseEnvelope) GetUnknown6() []*Unknown6Response {
	if m != nil {
		return m.Unknown6
	}
	return nil
}

func (m *ResponseEnvelope) GetAuthTicket() *AuthTicket {
	if m != nil {
		return m.AuthTicket
	}
	return nil
}

func init() {
	proto.RegisterType((*Signature)(nil), "POGOProtos.Networking.Envelopes.Signature")
	proto.RegisterType((*Signature_LocationFix)(nil), "POGOProtos.Networking.Envelopes.Signature.LocationFix")
	proto.RegisterType((*Signature_AndroidGpsInfo)(nil), "POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo")
	proto.RegisterType((*Signature_SensorInfo)(nil), "POGOProtos.Networking.Envelopes.Signature.SensorInfo")
	proto.RegisterType((*Signature_DeviceInfo)(nil), "POGOProtos.Networking.Envelopes.Signature.DeviceInfo")
	proto.RegisterType((*Signature_ActivityStatus)(nil), "POGOProtos.Networking.Envelopes.Signature.ActivityStatus")
	proto.RegisterType((*AuthTicket)(nil), "POGOProtos.Networking.Envelopes.AuthTicket")
	proto.RegisterType((*Unknown6Response)(nil), "POGOProtos.Networking.Envelopes.Unknown6Response")
	proto.RegisterType((*Unknown6Response_Unknown2)(nil), "POGOProtos.Networking.Envelopes.Unknown6Response.Unknown2")
	proto.RegisterType((*Unknown6Response_Unknown2_StoreItem)(nil), "POGOProtos.Networking.Envelopes.Unknown6Response.Unknown2.StoreItem")
	proto.RegisterType((*Unknown6Response_Unknown2_StoreItem_Tag)(nil), "POGOProtos.Networking.Envelopes.Unknown6Response.Unknown2.StoreItem.Tag")
	proto.RegisterType((*Unknown6)(nil), "POGOProtos.Networking.Envelopes.Unknown6")
	proto.RegisterType((*Unknown6_Unknown2)(nil), "POGOProtos.Networking.Envelopes.Unknown6.Unknown2")
	proto.RegisterType((*RequestEnvelope)(nil), "POGOProtos.Networking.Envelopes.RequestEnvelope")
	proto.RegisterType((*RequestEnvelope_AuthInfo)(nil), "POGOProtos.Networking.Envelopes.RequestEnvelope.AuthInfo")
	proto.RegisterType((*RequestEnvelope_AuthInfo_JWT)(nil), "POGOProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.JWT")
	proto.RegisterType((*ResponseEnvelope)(nil), "POGOProtos.Networking.Envelopes.ResponseEnvelope")
}

func init() { proto.RegisterFile("networking_envelopes.proto", fileDescriptor15) }

var fileDescriptor15 = []byte{
	// 1982 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x58, 0xdb, 0x72, 0x23, 0xb7,
	0xd1, 0xfe, 0x49, 0x8a, 0x12, 0x09, 0x92, 0x3a, 0x40, 0x7b, 0x18, 0xd3, 0xfe, 0x6d, 0x46, 0x5b,
	0x1b, 0x33, 0x71, 0x4c, 0x97, 0xe8, 0x58, 0xae, 0x24, 0xe5, 0x0b, 0xed, 0xc1, 0x5e, 0xb9, 0xac,
	0xb5, 0x0a, 0xa2, 0xd7, 0x2b, 0x55, 0xaa, 0xa6, 0xa0, 0x19, 0x88, 0x44, 0x69, 0x08, 0x4c, 0x00,
	0x8c, 0xa4, 0xd1, 0x0b, 0xe4, 0x21, 0xf2, 0x10, 0xc9, 0x45, 0x2e, 0x52, 0xb9, 0x49, 0xe5, 0x3a,
	0x2f, 0xe3, 0x47, 0x48, 0xe1, 0x34, 0x1c, 0x8a, 0xda, 0xac, 0xb4, 0xc9, 0x0d, 0x6b, 0xba, 0xbf,
	0x0f, 0x8d, 0x43, 0x37, 0x1a, 0xdd, 0x04, 0x5d, 0x46, 0xd4, 0x05, 0x17, 0x67, 0x94, 0x8d, 0x43,
	0xc2, 0xce, 0x49, 0xc2, 0x53, 0x22, 0x07, 0xa9, 0xe0, 0x8a, 0xc3, 0x8f, 0x0e, 0xbe, 0xff, 0xe6,
	0xfb, 0x03, 0xfd, 0x29, 0x07, 0x2f, 0x0b, 0xda, 0xe0, 0xb9, 0xa7, 0x75, 0x37, 0x62, 0xac, 0x70,
	0x98, 0x26, 0x38, 0x27, 0xc2, 0x8e, 0xe9, 0xde, 0xa3, 0xec, 0x9c, 0x30, 0xc5, 0x45, 0x1e, 0x52,
	0x45, 0xa6, 0x4e, 0xfb, 0x5e, 0x69, 0x16, 0x41, 0xfe, 0x90, 0x11, 0xa9, 0xdc, 0x24, 0x5b, 0x3f,
	0x3d, 0x00, 0xcd, 0x43, 0x3a, 0x66, 0x58, 0x65, 0x82, 0xc0, 0x21, 0xb8, 0xaf, 0xe8, 0x94, 0x48,
	0x85, 0xa7, 0x69, 0x28, 0x29, 0x8b, 0x48, 0x28, 0x15, 0x16, 0x2a, 0xa8, 0xf6, 0x2a, 0xfd, 0x25,
	0xb4, 0x59, 0x80, 0x87, 0x1a, 0x3b, 0xd4, 0x10, 0x3c, 0x02, 0xed, 0x84, 0x47, 0x58, 0x51, 0xce,
	0xc2, 0x53, 0x7a, 0x19, 0x2c, 0xf5, 0x6a, 0xfd, 0xd6, 0x70, 0x67, 0xf0, 0x96, 0xd5, 0x0f, 0x8a,
	0x59, 0x07, 0xdf, 0xb9, 0xe1, 0x5f, 0xd3, 0x4b, 0xd4, 0x4a, 0x66, 0x02, 0x1c, 0x81, 0xc6, 0x38,
	0x95, 0x21, 0x65, 0xa7, 0x3c, 0xa8, 0xf7, 0x2a, 0xfd, 0xd6, 0xf0, 0x37, 0x77, 0x30, 0xbb, 0xcb,
	0x62, 0xc1, 0x69, 0xfc, 0x4d, 0x2a, 0xf7, 0xd8, 0x29, 0x47, 0x2b, 0x63, 0xfb, 0x01, 0x5f, 0x81,
	0x96, 0x24, 0x4c, 0x72, 0x61, 0x0d, 0xaf, 0x18, 0xc3, 0x5f, 0xdc, 0xc1, 0xf0, 0xa1, 0x19, 0x6d,
	0x8c, 0x02, 0x59, 0x7c, 0x6b, 0xbb, 0x31, 0x39, 0xa7, 0x11, 0xb1, 0x76, 0x1b, 0x77, 0xb6, 0xfb,
	0xcc, 0x8c, 0xb6, 0x76, 0xe3, 0xe2, 0x1b, 0x9e, 0x80, 0x35, 0x1c, 0x29, 0x7a, 0x4e, 0x55, 0xae,
	0xbd, 0xa1, 0x32, 0x19, 0x34, 0xef, 0x7e, 0x18, 0xce, 0xc2, 0xa1, 0x31, 0x80, 0x56, 0xf1, 0x9c,
	0x0c, 0x1f, 0x83, 0xd5, 0xc2, 0x89, 0x13, 0x2c, 0x27, 0xdb, 0x01, 0x30, 0x1e, 0xef, 0x78, 0xed,
	0x0b, 0xad, 0x5c, 0xa0, 0x0d, 0x83, 0x7b, 0x8b, 0xb4, 0x21, 0xfc, 0x19, 0x68, 0x4b, 0x22, 0xa5,
	0x67, 0x05, 0x0f, 0x7a, 0x95, 0x7e, 0x1b, 0xb5, 0x9c, 0x4e, 0x73, 0xe0, 0x07, 0xa0, 0x59, 0x04,
	0x53, 0xf0, 0xd0, 0x18, 0x99, 0x29, 0xb4, 0x01, 0x17, 0xa7, 0xd6, 0x40, 0xd0, 0xab, 0xf5, 0x97,
	0x50, 0xcb, 0xe9, 0xbc, 0x81, 0x8c, 0x9d, 0x31, 0x7e, 0xc1, 0x86, 0x5f, 0x04, 0xef, 0xf5, 0x2a,
	0xfd, 0x1a, 0x9a, 0x29, 0xba, 0x3f, 0x55, 0x41, 0xab, 0x14, 0x56, 0xb0, 0x0b, 0x1a, 0xa9, 0xe0,
	0xe7, 0x34, 0x26, 0x22, 0xa8, 0xf4, 0x2a, 0xfd, 0x26, 0x2a, 0x64, 0xf8, 0x29, 0x80, 0xa5, 0xa0,
	0x67, 0x38, 0x95, 0x13, 0xee, 0x23, 0x7e, 0x63, 0x16, 0xf1, 0x0e, 0xd0, 0xa6, 0x12, 0xac, 0xa8,
	0xca, 0x62, 0x12, 0x74, 0x7a, 0x95, 0x7e, 0x15, 0x15, 0xb2, 0x5e, 0x54, 0xc2, 0xd9, 0xd8, 0x82,
	0xab, 0x06, 0x9c, 0x29, 0xe0, 0x67, 0x60, 0x73, 0xc2, 0x05, 0xbd, 0xe2, 0x4c, 0xe1, 0x24, 0xc4,
	0x51, 0x94, 0x09, 0x1c, 0xe5, 0xe6, 0x08, 0xab, 0x08, 0xce, 0xa0, 0x5d, 0x87, 0xe8, 0xa9, 0x70,
	0xe2, 0xa6, 0xba, 0x6f, 0xa7, 0xf2, 0x32, 0xfc, 0x04, 0x6c, 0x9c, 0x13, 0xa1, 0x68, 0x54, 0x36,
	0xf5, 0xc0, 0x90, 0xd6, 0x3d, 0x50, 0x18, 0xfa, 0x18, 0xac, 0xf9, 0xed, 0xfa, 0x10, 0xea, 0x9a,
	0xfd, 0xad, 0x7a, 0xb5, 0x8b, 0x83, 0x7b, 0xa0, 0x7e, 0x9a, 0x70, 0x2e, 0x82, 0xf7, 0x7b, 0x95,
	0x7e, 0x07, 0x59, 0x01, 0x3e, 0x02, 0x85, 0x83, 0x43, 0x95, 0xa7, 0x24, 0xf8, 0xc0, 0x0c, 0x2e,
	0xee, 0xfd, 0x28, 0x4f, 0x49, 0xf7, 0x8f, 0x55, 0xb0, 0x3a, 0x7f, 0xe5, 0xe0, 0x87, 0xa0, 0xa5,
	0xcf, 0x2f, 0x54, 0xdc, 0x64, 0x86, 0xca, 0xcc, 0xcd, 0x23, 0xae, 0xbd, 0xf2, 0x18, 0xac, 0x4a,
	0xac, 0x48, 0x92, 0x50, 0x45, 0x64, 0x98, 0x0a, 0x16, 0x54, 0x7b, 0xb5, 0x7e, 0x1d, 0x75, 0x66,
	0xda, 0x03, 0xc1, 0x60, 0x00, 0x56, 0xf0, 0x15, 0x9d, 0x66, 0x6a, 0x12, 0xd4, 0x7a, 0xb5, 0x7e,
	0x15, 0x79, 0x51, 0x9f, 0x37, 0x49, 0xc8, 0xb9, 0x59, 0x84, 0x49, 0x3c, 0x55, 0x34, 0x53, 0xc0,
	0x75, 0x50, 0x93, 0x4c, 0x04, 0x75, 0xa3, 0xd7, 0x9f, 0xf0, 0x23, 0xd0, 0x9a, 0x60, 0x19, 0xe2,
	0x64, 0x8a, 0x19, 0x8e, 0x82, 0xe5, 0x5e, 0xad, 0xdf, 0x40, 0x60, 0x82, 0xe5, 0xae, 0xd5, 0xe8,
	0x9d, 0x6a, 0x02, 0x49, 0x27, 0x64, 0x4a, 0x04, 0x95, 0xc1, 0x8a, 0xa1, 0xb4, 0x27, 0x58, 0x3e,
	0xf7, 0x3a, 0xbd, 0xad, 0x4c, 0x92, 0x38, 0xa4, 0x36, 0xe1, 0x35, 0x0c, 0xa5, 0xa9, 0x55, 0x7b,
	0x3a, 0xd8, 0xba, 0xff, 0xaa, 0x03, 0x30, 0xcb, 0x11, 0x6f, 0x88, 0xaf, 0xca, 0x9b, 0xe2, 0xeb,
	0x31, 0x58, 0x9d, 0xe2, 0x31, 0x23, 0x8a, 0x4f, 0x89, 0x22, 0x22, 0xbc, 0x0c, 0x6a, 0xbd, 0x4a,
	0xbf, 0x82, 0x3a, 0x65, 0xed, 0xeb, 0x05, 0x5a, 0x1e, 0x2c, 0x2d, 0xd2, 0x8e, 0x16, 0x68, 0x57,
	0x26, 0x91, 0x5e, 0xa3, 0x1d, 0xc3, 0x5f, 0x01, 0x88, 0xd9, 0x38, 0x21, 0x21, 0xe3, 0x62, 0x8a,
	0x13, 0x7a, 0x45, 0xe2, 0xf0, 0x32, 0x58, 0x36, 0xd4, 0x75, 0x83, 0xbc, 0x2c, 0x80, 0xd7, 0x37,
	0xb2, 0x73, 0x93, 0x48, 0x17, 0xd9, 0x47, 0x37, 0xb2, 0xaf, 0x4c, 0x7a, 0x5c, 0x64, 0x1f, 0xeb,
	0xc3, 0xc5, 0x51, 0x44, 0x92, 0x50, 0xe0, 0x8b, 0xf0, 0xd2, 0xa4, 0xa1, 0x0a, 0x6a, 0x1a, 0x15,
	0xc2, 0x17, 0xaf, 0xe7, 0xf1, 0x3c, 0x68, 0xcd, 0xe3, 0x47, 0xf3, 0xf8, 0x55, 0xd0, 0x9e, 0xc7,
	0x8f, 0xe1, 0xcf, 0xc1, 0xda, 0x38, 0x17, 0x5c, 0x46, 0x3c, 0x25, 0x6e, 0x8e, 0x8e, 0x3d, 0x91,
	0x42, 0x6d, 0xe6, 0x59, 0xe0, 0xe5, 0xe6, 0x42, 0x5f, 0xe3, 0x1d, 0x2d, 0xf2, 0xae, 0x82, 0xb5,
	0x45, 0x9e, 0x3d, 0x61, 0xb3, 0xae, 0xb9, 0x13, 0x5e, 0x77, 0xa7, 0xa0, 0x91, 0xeb, 0x27, 0x7c,
	0x9d, 0x9d, 0x07, 0x1b, 0x37, 0xb2, 0x8f, 0x6e, 0x64, 0x5f, 0x05, 0xf0, 0x46, 0xf6, 0xb1, 0x8e,
	0x47, 0xa3, 0x23, 0xc2, 0xc5, 0x04, 0xbe, 0x24, 0x32, 0xd8, 0xb4, 0xf1, 0x38, 0x87, 0xec, 0x5e,
	0x12, 0xd9, 0xfd, 0xcb, 0x12, 0x00, 0xb3, 0x97, 0x09, 0xbe, 0x0f, 0x9a, 0xfe, 0x95, 0x8b, 0x7d,
	0x2a, 0x75, 0x8f, 0x55, 0x6c, 0x5d, 0x6d, 0x52, 0x40, 0x78, 0xc2, 0xb1, 0x88, 0x43, 0x86, 0xa7,
	0xc4, 0xa4, 0xd2, 0xa6, 0x76, 0xb5, 0x41, 0x9e, 0x68, 0xe0, 0x25, 0x9e, 0x12, 0xb3, 0x90, 0x82,
	0xcd, 0x55, 0xc2, 0xb1, 0x4e, 0xcf, 0x35, 0xc3, 0xde, 0x28, 0xd8, 0x1e, 0xd0, 0x8f, 0x82, 0x9b,
	0xf9, 0x44, 0x60, 0x16, 0x9b, 0x78, 0x6f, 0x22, 0xf7, 0xe6, 0x3e, 0xd1, 0xaa, 0x12, 0x65, 0xca,
	0x63, 0x92, 0x98, 0x58, 0x2f, 0x28, 0xfb, 0x5a, 0x05, 0x77, 0xc0, 0xc3, 0x32, 0x25, 0xa4, 0x31,
	0x61, 0x8a, 0x9e, 0x52, 0x22, 0x4c, 0xb8, 0x37, 0xd1, 0xfd, 0x12, 0x7b, 0xaf, 0x00, 0xe1, 0x2f,
	0xc1, 0xc6, 0xdc, 0x38, 0xbd, 0x62, 0x13, 0xf2, 0x4d, 0xb4, 0x56, 0x1a, 0xa1, 0xd7, 0x0b, 0x3f,
	0x07, 0xf7, 0x27, 0x58, 0xc4, 0x17, 0x58, 0x90, 0x70, 0x8a, 0x59, 0x76, 0x8a, 0x23, 0xfd, 0x08,
	0x0b, 0x13, 0xf4, 0x4d, 0x74, 0xcf, 0x83, 0xfb, 0x25, 0x4c, 0xdf, 0xd4, 0xd9, 0x20, 0xb3, 0xfa,
	0xa6, 0x61, 0x77, 0x0a, 0xb6, 0x59, 0xff, 0x63, 0xb0, 0x7a, 0x4a, 0xc5, 0xd4, 0xd0, 0xec, 0x39,
	0x00, 0x4b, 0xf3, 0x5a, 0x7b, 0x12, 0x8f, 0x40, 0xa1, 0x08, 0x15, 0x1e, 0x4b, 0x73, 0x11, 0x9a,
	0xa8, 0xed, 0x95, 0x23, 0x3c, 0x96, 0xf3, 0x24, 0x9d, 0xd7, 0x3b, 0xd7, 0x48, 0x79, 0x4a, 0xe0,
	0x36, 0xb8, 0x57, 0x90, 0x4e, 0x29, 0x1b, 0x13, 0x91, 0x0a, 0xca, 0x94, 0xb9, 0x0d, 0x4d, 0xb4,
	0xe9, 0xb1, 0xaf, 0x67, 0x50, 0xf7, 0x4f, 0xfa, 0x29, 0x98, 0x2f, 0x30, 0xb6, 0x40, 0xc7, 0x54,
	0x92, 0xa1, 0x79, 0x10, 0xa6, 0xd2, 0xe5, 0xbf, 0x96, 0x51, 0x8e, 0xe8, 0x94, 0xec, 0x9b, 0x22,
	0xc4, 0xbd, 0xe0, 0xfe, 0x91, 0xd2, 0x91, 0xd3, 0x40, 0x1d, 0xa7, 0x75, 0xa6, 0x02, 0xb0, 0x72,
	0x81, 0x13, 0x5d, 0xe9, 0x98, 0x58, 0x69, 0x20, 0x2f, 0x6a, 0x44, 0x64, 0x8c, 0x69, 0x64, 0xc9,
	0x22, 0x4e, 0x84, 0x1f, 0x02, 0xa0, 0x4d, 0x52, 0xce, 0xb0, 0xc8, 0x4d, 0x58, 0x34, 0x50, 0x49,
	0xa3, 0x71, 0x9c, 0x29, 0x3e, 0xe5, 0x8a, 0x9e, 0x13, 0x13, 0x08, 0x0d, 0x54, 0xd2, 0x68, 0xcb,
	0x8a, 0x26, 0x4a, 0x5b, 0x5e, 0xb1, 0x96, 0x9d, 0xa8, 0x91, 0x28, 0x8f, 0x12, 0x8d, 0x34, 0x2c,
	0xe2, 0x44, 0xf8, 0x00, 0x2c, 0x97, 0xca, 0xb5, 0x36, 0x72, 0xd2, 0x56, 0x0c, 0xc0, 0x6e, 0xa6,
	0x26, 0x23, 0x1a, 0x9d, 0x11, 0xa5, 0x5f, 0x5c, 0x5b, 0x62, 0x57, 0x0c, 0xc9, 0x0a, 0x70, 0x00,
	0x36, 0xc9, 0x65, 0x4a, 0xb5, 0x5f, 0x8a, 0xa7, 0x63, 0x2a, 0x7d, 0x51, 0x62, 0xa1, 0x91, 0x47,
	0xf6, 0xa5, 0x7e, 0xea, 0x08, 0x8b, 0xcd, 0x79, 0xb4, 0x91, 0xfe, 0xdc, 0xfa, 0xe7, 0x32, 0x58,
	0xff, 0xc1, 0x9e, 0xdb, 0x0e, 0x22, 0x32, 0xe5, 0x4c, 0x12, 0xed, 0x70, 0xe1, 0xbe, 0xad, 0xc3,
	0xf5, 0xa4, 0x75, 0xd4, 0xf6, 0x4a, 0xe3, 0xf0, 0x57, 0xa0, 0xe1, 0x0b, 0x29, 0x33, 0x61, 0x6b,
	0xf8, 0xdb, 0xb7, 0x16, 0x9a, 0xd7, 0x67, 0xf2, 0x8a, 0x21, 0x2a, 0x6c, 0x75, 0xff, 0x5c, 0x07,
	0x0d, 0xaf, 0xd6, 0xa5, 0x8d, 0x03, 0xb6, 0x5d, 0x28, 0x14, 0x32, 0x3c, 0x06, 0x75, 0xdd, 0xbc,
	0x48, 0x53, 0x0d, 0xb4, 0x86, 0xcf, 0xde, 0x7d, 0xf6, 0xc1, 0xa1, 0xe2, 0x82, 0xec, 0x29, 0x32,
	0x45, 0xd6, 0x24, 0xdc, 0x07, 0x1b, 0xb6, 0x61, 0x0a, 0xa3, 0x4c, 0x08, 0xc2, 0x22, 0x4a, 0xa4,
	0xa9, 0x2a, 0x5a, 0xc3, 0x5e, 0x79, 0x9e, 0x67, 0x58, 0xe1, 0xc1, 0x81, 0x6d, 0xad, 0x9e, 0x5a,
	0x66, 0x8e, 0xd6, 0xed, 0xd0, 0xa7, 0xc5, 0xc8, 0xd2, 0x36, 0x7e, 0xed, 0xf2, 0x51, 0x21, 0x77,
	0xff, 0x51, 0x03, 0xcd, 0x62, 0x7e, 0xf8, 0x10, 0xac, 0xe8, 0x15, 0xcc, 0xb2, 0xe6, 0xb2, 0x16,
	0xf7, 0x62, 0x78, 0x1f, 0x2c, 0x53, 0x19, 0x52, 0x9c, 0xba, 0x68, 0xaf, 0x53, 0xb9, 0x87, 0x53,
	0xf8, 0x02, 0xac, 0xb9, 0x15, 0xe6, 0xba, 0x7e, 0x3a, 0xc9, 0x72, 0xe3, 0xdd, 0xdb, 0x2c, 0xb3,
	0xe3, 0x07, 0x8e, 0xf8, 0x93, 0x2c, 0x87, 0x7b, 0x60, 0x2d, 0xa7, 0x24, 0x89, 0xa5, 0xdf, 0xb2,
	0x2d, 0x15, 0x6e, 0x63, 0x69, 0xd5, 0x0e, 0xf4, 0x32, 0x7c, 0x06, 0x5a, 0xce, 0x94, 0x5e, 0xbc,
	0xeb, 0xc9, 0x1e, 0x95, 0xcd, 0xec, 0xf9, 0xfe, 0x73, 0xa0, 0x77, 0x6d, 0x7e, 0xb4, 0x65, 0x04,
	0xec, 0x38, 0x73, 0x14, 0xbf, 0x07, 0x4b, 0x26, 0x25, 0x2d, 0x9b, 0x63, 0x7f, 0xf1, 0xbf, 0x70,
	0xef, 0x60, 0x84, 0xc7, 0xc8, 0x58, 0x2d, 0xb9, 0xe4, 0x4b, 0x73, 0x57, 0xeb, 0x85, 0x4b, 0xbe,
	0xec, 0x7e, 0x0a, 0x6a, 0x23, 0x3c, 0xd6, 0xb7, 0xe5, 0x8c, 0xe4, 0xce, 0x0f, 0xfa, 0x53, 0xdf,
	0xc2, 0x73, 0x9c, 0x64, 0xfe, 0xad, 0xb2, 0xc2, 0xd6, 0xdf, 0x2b, 0x45, 0xc4, 0xee, 0x94, 0x7b,
	0x92, 0xd2, 0xd5, 0xf1, 0x3d, 0x89, 0xb9, 0x39, 0x2f, 0x17, 0x6e, 0xce, 0xf0, 0xd6, 0x9b, 0xbb,
	0xe9, 0xc6, 0xfc, 0xae, 0x74, 0x61, 0x3e, 0x03, 0x9b, 0x84, 0x45, 0x22, 0x4f, 0x15, 0x89, 0x43,
	0xe9, 0xfb, 0x3a, 0x97, 0x35, 0x60, 0x01, 0x15, 0x1d, 0xdf, 0xd6, 0x5f, 0xeb, 0x60, 0x0d, 0xd9,
	0xc5, 0xf9, 0xd9, 0x74, 0xfd, 0x6b, 0x93, 0x50, 0x18, 0xf1, 0xd8, 0x6f, 0x01, 0x58, 0xd5, 0x53,
	0x1e, 0x13, 0xf8, 0xff, 0x00, 0xf8, 0x4d, 0x52, 0x9b, 0x4e, 0x96, 0x50, 0xd3, 0x69, 0xf6, 0x62,
	0xf8, 0x14, 0x34, 0xfc, 0xff, 0x07, 0xae, 0xcf, 0xff, 0xf8, 0x0d, 0x1b, 0x44, 0xfe, 0x6f, 0x06,
	0xf7, 0x81, 0x8a, 0x81, 0xf0, 0x79, 0x71, 0x4a, 0x3b, 0x26, 0xd3, 0xb6, 0x86, 0xbf, 0xb8, 0x7d,
	0x08, 0x14, 0x43, 0xe7, 0xfa, 0x30, 0x5b, 0x7a, 0xbe, 0xa1, 0x0f, 0xb3, 0x95, 0x66, 0xa9, 0x0f,
	0x2b, 0xb7, 0x55, 0x4d, 0x3b, 0xb2, 0x68, 0xab, 0x5e, 0x81, 0x26, 0xce, 0xd4, 0xc4, 0xb6, 0xf0,
	0xe0, 0x96, 0x6d, 0xf6, 0xb5, 0x63, 0x1e, 0xe8, 0xf4, 0x6e, 0xda, 0xf8, 0x06, 0x76, 0x5f, 0xf0,
	0x3b, 0xd0, 0x32, 0x76, 0x95, 0xc9, 0xfa, 0xa6, 0x6c, 0x6d, 0x0d, 0x3f, 0x79, 0xab, 0xe5, 0xd9,
	0x43, 0x61, 0x9e, 0x23, 0xff, 0x68, 0xcc, 0x9a, 0xdf, 0xed, 0xa1, 0x79, 0xd9, 0x67, 0xcd, 0xef,
	0xf6, 0xb0, 0xab, 0xc3, 0xd6, 0x2f, 0xe1, 0x3f, 0x76, 0xbe, 0x87, 0xa0, 0xae, 0xf8, 0x19, 0x61,
	0x2e, 0x58, 0xbf, 0x7a, 0xe7, 0x8d, 0x0e, 0xbe, 0xfd, 0x71, 0x84, 0xac, 0xad, 0xee, 0x57, 0xa0,
	0xf6, 0xed, 0x8f, 0x23, 0x3d, 0x6f, 0xc4, 0x99, 0x22, 0x4c, 0x49, 0x3f, 0xaf, 0x97, 0x4b, 0x57,
	0xd4, 0xde, 0x93, 0xd9, 0x15, 0x1d, 0x6e, 0xfd, 0xad, 0x0a, 0xd6, 0xfd, 0x45, 0x7f, 0xd7, 0xb8,
	0xad, 0x5e, 0x8f, 0xdb, 0x87, 0x60, 0x05, 0xa7, 0x34, 0xcc, 0x44, 0xe2, 0xca, 0xcb, 0x65, 0x9c,
	0xd2, 0x1f, 0x44, 0x02, 0xf7, 0xe7, 0x62, 0x51, 0x07, 0xf4, 0xf6, 0x9d, 0xd3, 0x51, 0x29, 0x26,
	0xaf, 0x79, 0x79, 0xe5, 0xbf, 0xf3, 0xb2, 0x2e, 0x67, 0x88, 0xca, 0x04, 0x93, 0x41, 0xdc, 0xab,
	0xf5, 0xdb, 0xc8, 0x8b, 0x3a, 0x5d, 0x11, 0x21, 0xb8, 0x08, 0x88, 0x4d, 0x57, 0x46, 0x78, 0xd2,
	0x38, 0x5e, 0x36, 0x7f, 0xea, 0xc9, 0x83, 0xff, 0x3b, 0xa8, 0x1c, 0x54, 0x4f, 0xac, 0xf4, 0xf9,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x71, 0x53, 0x8e, 0x65, 0x14, 0x00, 0x00,
}
