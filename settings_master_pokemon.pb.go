// Code generated by protoc-gen-go.
// source: settings_master_pokemon.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of Gender from enums.proto

// Ignoring public import of ItemCategory from enums.proto

// Ignoring public import of PokemonFamilyId from enums.proto

// Ignoring public import of PokemonId from enums.proto

// Ignoring public import of Platform from enums.proto

// Ignoring public import of ActivityType from enums.proto

// Ignoring public import of TutorialState from enums.proto

// Ignoring public import of PokemonMovementType from enums.proto

// Ignoring public import of ItemEffect from enums.proto

// Ignoring public import of HoloIapItemCategory from enums.proto

// Ignoring public import of PokemonRarity from enums.proto

// Ignoring public import of BadgeType from enums.proto

// Ignoring public import of CameraInterpolation from enums.proto

// Ignoring public import of PokemonMove from enums.proto

// Ignoring public import of TeamColor from enums.proto

// Ignoring public import of CameraTarget from enums.proto

// Ignoring public import of PokemonType from enums.proto

type CameraAttributes struct {
	DiskRadiusM       float32 `protobuf:"fixed32,1,opt,name=disk_radius_m,json=diskRadiusM" json:"disk_radius_m,omitempty"`
	CylinderRadiusM   float32 `protobuf:"fixed32,2,opt,name=cylinder_radius_m,json=cylinderRadiusM" json:"cylinder_radius_m,omitempty"`
	CylinderHeightM   float32 `protobuf:"fixed32,3,opt,name=cylinder_height_m,json=cylinderHeightM" json:"cylinder_height_m,omitempty"`
	CylinderGroundM   float32 `protobuf:"fixed32,4,opt,name=cylinder_ground_m,json=cylinderGroundM" json:"cylinder_ground_m,omitempty"`
	ShoulderModeScale float32 `protobuf:"fixed32,5,opt,name=shoulder_mode_scale,json=shoulderModeScale" json:"shoulder_mode_scale,omitempty"`
}

func (m *CameraAttributes) Reset()                    { *m = CameraAttributes{} }
func (m *CameraAttributes) String() string            { return proto.CompactTextString(m) }
func (*CameraAttributes) ProtoMessage()               {}
func (*CameraAttributes) Descriptor() ([]byte, []int) { return fileDescriptor19, []int{0} }

type StatsAttributes struct {
	BaseStamina      int32 `protobuf:"varint,1,opt,name=base_stamina,json=baseStamina" json:"base_stamina,omitempty"`
	BaseAttack       int32 `protobuf:"varint,2,opt,name=base_attack,json=baseAttack" json:"base_attack,omitempty"`
	BaseDefense      int32 `protobuf:"varint,3,opt,name=base_defense,json=baseDefense" json:"base_defense,omitempty"`
	DodgeEnergyDelta int32 `protobuf:"varint,8,opt,name=dodge_energy_delta,json=dodgeEnergyDelta" json:"dodge_energy_delta,omitempty"`
}

func (m *StatsAttributes) Reset()                    { *m = StatsAttributes{} }
func (m *StatsAttributes) String() string            { return proto.CompactTextString(m) }
func (*StatsAttributes) ProtoMessage()               {}
func (*StatsAttributes) Descriptor() ([]byte, []int) { return fileDescriptor19, []int{1} }

type EncounterAttributes struct {
	BaseCaptureRate      float32             `protobuf:"fixed32,1,opt,name=base_capture_rate,json=baseCaptureRate" json:"base_capture_rate,omitempty"`
	BaseFleeRate         float32             `protobuf:"fixed32,2,opt,name=base_flee_rate,json=baseFleeRate" json:"base_flee_rate,omitempty"`
	CollisionRadiusM     float32             `protobuf:"fixed32,3,opt,name=collision_radius_m,json=collisionRadiusM" json:"collision_radius_m,omitempty"`
	CollisionHeightM     float32             `protobuf:"fixed32,4,opt,name=collision_height_m,json=collisionHeightM" json:"collision_height_m,omitempty"`
	CollisionHeadRadiusM float32             `protobuf:"fixed32,5,opt,name=collision_head_radius_m,json=collisionHeadRadiusM" json:"collision_head_radius_m,omitempty"`
	MovementType         PokemonMovementType `protobuf:"varint,6,opt,name=movement_type,json=movementType,enum=POGOProtos.Enums.PokemonMovementType" json:"movement_type,omitempty"`
	MovementTimerS       float32             `protobuf:"fixed32,7,opt,name=movement_timer_s,json=movementTimerS" json:"movement_timer_s,omitempty"`
	JumpTimeS            float32             `protobuf:"fixed32,8,opt,name=jump_time_s,json=jumpTimeS" json:"jump_time_s,omitempty"`
	AttackTimerS         float32             `protobuf:"fixed32,9,opt,name=attack_timer_s,json=attackTimerS" json:"attack_timer_s,omitempty"`
}

func (m *EncounterAttributes) Reset()                    { *m = EncounterAttributes{} }
func (m *EncounterAttributes) String() string            { return proto.CompactTextString(m) }
func (*EncounterAttributes) ProtoMessage()               {}
func (*EncounterAttributes) Descriptor() ([]byte, []int) { return fileDescriptor19, []int{2} }

func init() {
	proto.RegisterType((*CameraAttributes)(nil), "POGOProtos.Settings.Master.Pokemon.CameraAttributes")
	proto.RegisterType((*StatsAttributes)(nil), "POGOProtos.Settings.Master.Pokemon.StatsAttributes")
	proto.RegisterType((*EncounterAttributes)(nil), "POGOProtos.Settings.Master.Pokemon.EncounterAttributes")
}

func init() { proto.RegisterFile("settings_master_pokemon.proto", fileDescriptor19) }

var fileDescriptor19 = []byte{
	// 506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xe9, 0xb6, 0x8e, 0xce, 0xdd, 0xda, 0xce, 0x43, 0xa2, 0x42, 0xe2, 0x5f, 0x05, 0xd2,
	0x84, 0x50, 0x2e, 0x40, 0x3c, 0xc0, 0xd8, 0xca, 0x10, 0x52, 0xb5, 0x2a, 0xe1, 0x8a, 0x9b, 0xc8,
	0x8d, 0xcf, 0x5a, 0xd3, 0xd8, 0xae, 0x62, 0x07, 0xa9, 0x2f, 0xc4, 0x23, 0xf0, 0x50, 0x3c, 0x05,
	0xf6, 0x71, 0x92, 0xa6, 0x68, 0x77, 0xf1, 0xf7, 0xfd, 0x7c, 0x8e, 0x8f, 0x3f, 0x87, 0x3c, 0x37,
	0x60, 0xad, 0x50, 0x4b, 0x93, 0x4a, 0x66, 0x2c, 0x14, 0xe9, 0x46, 0xaf, 0x41, 0x6a, 0x15, 0x6d,
	0x0a, 0x6d, 0x35, 0x9d, 0xcc, 0xef, 0x6e, 0xef, 0xe6, 0xfe, 0xd3, 0x44, 0x49, 0x45, 0x46, 0x33,
	0x24, 0xa3, 0x79, 0x20, 0x9f, 0xf5, 0x41, 0x95, 0xd2, 0x84, 0x0d, 0x93, 0xbf, 0x1d, 0x32, 0xba,
	0x66, 0x12, 0x0a, 0x76, 0x65, 0x6d, 0x21, 0x16, 0xa5, 0x05, 0x43, 0x27, 0xe4, 0x8c, 0x0b, 0xb3,
	0x4e, 0x0b, 0xc6, 0x45, 0xe9, 0x3a, 0x8d, 0x3b, 0xaf, 0x3a, 0x97, 0x07, 0x71, 0xdf, 0x8b, 0x31,
	0x6a, 0x33, 0xfa, 0x8e, 0x9c, 0x67, 0xdb, 0x5c, 0x28, 0xee, 0xce, 0xd0, 0x70, 0x07, 0xc8, 0x0d,
	0x6b, 0xe3, 0x21, 0x76, 0x05, 0x62, 0xb9, 0xb2, 0x8e, 0x3d, 0xdc, 0x67, 0xbf, 0xa2, 0xbe, 0xcf,
	0x2e, 0x0b, 0x5d, 0x2a, 0xee, 0xd8, 0xa3, 0x7d, 0xf6, 0x16, 0xf5, 0x19, 0x8d, 0xc8, 0x85, 0x59,
	0xe9, 0x32, 0xf7, 0xac, 0xd4, 0x1c, 0x52, 0x93, 0xb1, 0x1c, 0xc6, 0x5d, 0xa4, 0xcf, 0x6b, 0x6b,
	0xe6, 0x9c, 0xc4, 0x1b, 0x93, 0xdf, 0x1d, 0x32, 0x4c, 0x2c, 0xb3, 0xa6, 0x35, 0xeb, 0x6b, 0x72,
	0xba, 0x60, 0xc6, 0x6d, 0xb5, 0x4c, 0x0a, 0xc5, 0x70, 0xd4, 0x6e, 0xdc, 0xf7, 0x5a, 0x12, 0x24,
	0xfa, 0x92, 0xe0, 0x32, 0x65, 0xd6, 0xb2, 0x6c, 0x8d, 0x43, 0x76, 0x63, 0xe2, 0xa5, 0x2b, 0x54,
	0x9a, 0x1a, 0x1c, 0xee, 0x41, 0x19, 0xc0, 0xd1, 0xaa, 0x1a, 0x37, 0x41, 0xa2, 0xef, 0x09, 0xe5,
	0x9a, 0x2f, 0x21, 0x05, 0x05, 0xc5, 0x72, 0xeb, 0xd0, 0xdc, 0xb2, 0x71, 0x0f, 0xc1, 0x11, 0x3a,
	0x53, 0x34, 0x6e, 0xbc, 0x3e, 0xf9, 0x73, 0x48, 0x2e, 0xa6, 0x2a, 0x73, 0x53, 0xba, 0xe0, 0x5a,
	0x87, 0x75, 0x97, 0x83, 0x8d, 0x32, 0xb6, 0xb1, 0x65, 0x01, 0xee, 0xe2, 0x2d, 0x54, 0xe1, 0x0c,
	0xbd, 0x71, 0x1d, 0xf4, 0xd8, 0xc9, 0xf4, 0x0d, 0x19, 0x20, 0x7b, 0x9f, 0x43, 0x05, 0x86, 0x74,
	0xf0, 0xa8, 0x5f, 0x9c, 0x88, 0x94, 0x3b, 0x57, 0xa6, 0xf3, 0x5c, 0x18, 0xa1, 0xd5, 0x2e, 0xc7,
	0x90, 0xcd, 0xa8, 0x71, 0xea, 0x20, 0xf7, 0xe8, 0x26, 0xc9, 0xa3, 0xff, 0xe8, 0x3a, 0xca, 0x4f,
	0xe4, 0x69, 0x9b, 0x66, 0x7c, 0xd7, 0x20, 0x44, 0xf4, 0xa4, 0xb5, 0x85, 0xf1, 0xba, 0xc9, 0x37,
	0x72, 0x26, 0xf5, 0x2f, 0x90, 0xa0, 0x6c, 0x6a, 0xb7, 0x1b, 0x18, 0x1f, 0x3b, 0x78, 0xf0, 0xe1,
	0x6d, 0xd4, 0x7a, 0xdb, 0x53, 0x7c, 0xc2, 0xd5, 0x8b, 0x9e, 0x55, 0xf4, 0x77, 0x07, 0xc7, 0xa7,
	0xb2, 0xb5, 0xa2, 0x97, 0x64, 0xb4, 0xab, 0x25, 0xdc, 0x33, 0x4f, 0xcd, 0xf8, 0x31, 0xf6, 0x1e,
	0x34, 0x9c, 0x97, 0x13, 0xfa, 0x82, 0xf4, 0x7f, 0x96, 0x72, 0x83, 0x94, 0x83, 0x7a, 0x08, 0x9d,
	0x78, 0xc9, 0x03, 0x89, 0xbf, 0xce, 0x90, 0x7f, 0x53, 0xe7, 0x24, 0x5c, 0x67, 0x50, 0x43, 0x95,
	0xcf, 0xbd, 0x1f, 0xc7, 0xf8, 0x5f, 0x99, 0xf9, 0xa3, 0x45, 0xf8, 0xfa, 0xf8, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0xb5, 0xf6, 0x0e, 0x69, 0xb3, 0x03, 0x00, 0x00,
}
