// Code generated by protoc-gen-go.
// source: data_player.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	data_player.proto
	settings_master.proto
	data_battle.proto
	data.proto
	map_fort.proto
	inventory.proto
	maps.proto
	settings_master_pokemon.proto
	inventory_item.proto
	data_gym.proto
	data_capture.proto
	networking_requests_messages.proto
	map_pokemon.proto
	settings_master_item.proto
	settings.proto
	networking_envelopes.proto
	enums.proto
	data_logs.proto
	networking_requests.proto
	networking_responses.proto

It has these top-level messages:
	EquippedBadge
	ContactSettings
	PlayerAvatar
	PlayerStats
	Currency
	PlayerCurrency
	PlayerCamera
	PlayerPublicProfile
	DailyBonus
	BadgeSettings
	PokemonSettings
	MoveSequenceSettings
	CameraSettings
	IapItemDisplay
	GymLevelSettings
	IapSettings
	PlayerLevelSettings
	TypeEffectiveSettings
	MoveSettings
	GymBattleSettings
	EquippedBadgeSettings
	PokemonUpgradeSettings
	EncounterSettings
	ItemSettings
	BattlePokemonInfo
	BattleAction
	BattleLog
	BattleParticipant
	BattleResults
	PlayerData
	PlayerBadge
	PokemonData
	PokedexEntry
	AssetDigestEntry
	DownloadUrlEntry
	FortSummary
	FortModifier
	FortData
	FortLureInfo
	InventoryItemData
	InventoryItem
	InventoryDelta
	InventoryUpgrades
	Candy
	EggIncubator
	AppliedItem
	AppliedItems
	EggIncubators
	InventoryUpgrade
	MapCell
	SpawnPoint
	CameraAttributes
	EncounterAttributes
	StatsAttributes
	ItemAward
	ItemData
	GymMembership
	GymState
	CaptureProbability
	CaptureAward
	DownloadSettingsMessage
	UseItemEggIncubatorMessage
	AttackGymMessage
	SetAvatarMessage
	LevelUpRewardsMessage
	EchoMessage
	ClaimCodenameMessage
	UseItemPotionMessage
	SetContactSettingsMessage
	UseItemXpBoostMessage
	UseItemCaptureMessage
	GetPlayerProfileMessage
	GetIncensePokemonMessage
	MarkTutorialCompleteMessage
	AddFortModifierMessage
	PlayerUpdateMessage
	FortSearchMessage
	EncounterMessage
	SfidaActionLogMessage
	EquipBadgeMessage
	FortDeployPokemonMessage
	UseItemReviveMessage
	DownloadRemoteConfigVersionMessage
	StartGymBattleMessage
	IncenseEncounterMessage
	CheckAwardedBadgesMessage
	UseIncenseMessage
	DownloadItemTemplatesMessage
	SetPlayerTeamMessage
	CatchPokemonMessage
	NicknamePokemonMessage
	CheckCodenameAvailableMessage
	GetHatchedEggsMessage
	CollectDailyDefenderBonusMessage
	EncounterTutorialCompleteMessage
	UpgradePokemonMessage
	GetSuggestedCodenamesMessage
	DiskEncounterMessage
	FortDetailsMessage
	RecycleInventoryItemMessage
	GetInventoryMessage
	FortRecallPokemonMessage
	ReleasePokemonMessage
	GetMapObjectsMessage
	GetGymDetailsMessage
	GetPlayerMessage
	CollectDailyBonusMessage
	GetDownloadUrlsMessage
	SetFavoritePokemonMessage
	UseItemGymMessage
	GetAssetDigestMessage
	EvolvePokemonMessage
	NearbyPokemon
	WildPokemon
	MapPokemon
	IncenseAttributes
	FortModifierAttributes
	EggIncubatorAttributes
	PotionAttributes
	PokeballAttributes
	BattleAttributes
	ReviveAttributes
	ExperienceBoostAttributes
	InventoryUpgradeAttributes
	FoodAttributes
	InventorySettings
	DownloadSettingsAction
	MapSettings
	GpsSettings
	GlobalSettings
	LevelSettings
	FortSettings
	Signature
	AuthTicket
	Unknown6Response
	Unknown6
	RequestEnvelope
	ResponseEnvelope
	FortSearchLogEntry
	ActionLogEntry
	CatchPokemonLogEntry
	Request
	MarkTutorialCompleteResponse
	CollectDailyDefenderBonusResponse
	GetAssetDigestResponse
	RecycleInventoryItemResponse
	DownloadSettingsResponse
	GetPlayerProfileResponse
	UseItemCaptureResponse
	SetAvatarResponse
	SetContactSettingsResponse
	PlayerUpdateResponse
	EvolvePokemonResponse
	GetHatchedEggsResponse
	EncounterResponse
	UseItemXpBoostResponse
	EquipBadgeResponse
	FortRecallPokemonResponse
	CatchPokemonResponse
	CheckCodenameAvailableResponse
	FortSearchResponse
	SetPlayerTeamResponse
	IncenseEncounterResponse
	GetGymDetailsResponse
	DownloadItemTemplatesResponse
	StartGymBattleResponse
	EncounterTutorialCompleteResponse
	GetPlayerResponse
	CheckAwardedBadgesResponse
	GetDownloadUrlsResponse
	AddFortModifierResponse
	SfidaActionLogResponse
	ReleasePokemonResponse
	UseItemEggIncubatorResponse
	UseItemPotionResponse
	UpgradePokemonResponse
	DiskEncounterResponse
	GetSuggestedCodenamesResponse
	EchoResponse
	GetMapObjectsResponse
	NicknamePokemonResponse
	UseItemReviveResponse
	GetIncensePokemonResponse
	UseItemGymResponse
	GetInventoryResponse
	FortDetailsResponse
	UseIncenseResponse
	SetFavoritePokemonResponse
	LevelUpRewardsResponse
	FortDeployPokemonResponse
	DownloadRemoteConfigVersionResponse
	ClaimCodenameResponse
	AttackGymResponse
	CollectDailyBonusResponse
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Ignoring public import of TutorialState from enums.proto

// Ignoring public import of CameraTarget from enums.proto

// Ignoring public import of PokemonType from enums.proto

// Ignoring public import of PokemonMove from enums.proto

// Ignoring public import of TeamColor from enums.proto

// Ignoring public import of CameraInterpolation from enums.proto

// Ignoring public import of Platform from enums.proto

// Ignoring public import of PokemonRarity from enums.proto

// Ignoring public import of PokemonMovementType from enums.proto

// Ignoring public import of BadgeType from enums.proto

// Ignoring public import of PokemonFamilyId from enums.proto

// Ignoring public import of ActivityType from enums.proto

// Ignoring public import of PokemonId from enums.proto

// Ignoring public import of ItemEffect from enums.proto

// Ignoring public import of HoloIapItemCategory from enums.proto

// Ignoring public import of ItemCategory from enums.proto

// Ignoring public import of Gender from enums.proto

type EquippedBadge struct {
	BadgeType                         BadgeType `protobuf:"varint,1,opt,name=badge_type,json=badgeType,enum=POGOProtos.Enums.BadgeType" json:"badge_type,omitempty"`
	Level                             int32     `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	NextEquipChangeAllowedTimestampMs int64     `protobuf:"varint,3,opt,name=next_equip_change_allowed_timestamp_ms,json=nextEquipChangeAllowedTimestampMs" json:"next_equip_change_allowed_timestamp_ms,omitempty"`
}

func (m *EquippedBadge) Reset()                    { *m = EquippedBadge{} }
func (m *EquippedBadge) String() string            { return proto.CompactTextString(m) }
func (*EquippedBadge) ProtoMessage()               {}
func (*EquippedBadge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ContactSettings struct {
	SendMarketingEmails   bool `protobuf:"varint,1,opt,name=send_marketing_emails,json=sendMarketingEmails" json:"send_marketing_emails,omitempty"`
	SendPushNotifications bool `protobuf:"varint,2,opt,name=send_push_notifications,json=sendPushNotifications" json:"send_push_notifications,omitempty"`
}

func (m *ContactSettings) Reset()                    { *m = ContactSettings{} }
func (m *ContactSettings) String() string            { return proto.CompactTextString(m) }
func (*ContactSettings) ProtoMessage()               {}
func (*ContactSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PlayerAvatar struct {
	Skin     int32  `protobuf:"varint,2,opt,name=skin" json:"skin,omitempty"`
	Hair     int32  `protobuf:"varint,3,opt,name=hair" json:"hair,omitempty"`
	Shirt    int32  `protobuf:"varint,4,opt,name=shirt" json:"shirt,omitempty"`
	Pants    int32  `protobuf:"varint,5,opt,name=pants" json:"pants,omitempty"`
	Hat      int32  `protobuf:"varint,6,opt,name=hat" json:"hat,omitempty"`
	Shoes    int32  `protobuf:"varint,7,opt,name=shoes" json:"shoes,omitempty"`
	Gender   Gender `protobuf:"varint,8,opt,name=gender,enum=POGOProtos.Enums.Gender" json:"gender,omitempty"`
	Eyes     int32  `protobuf:"varint,9,opt,name=eyes" json:"eyes,omitempty"`
	Backpack int32  `protobuf:"varint,10,opt,name=backpack" json:"backpack,omitempty"`
}

func (m *PlayerAvatar) Reset()                    { *m = PlayerAvatar{} }
func (m *PlayerAvatar) String() string            { return proto.CompactTextString(m) }
func (*PlayerAvatar) ProtoMessage()               {}
func (*PlayerAvatar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PlayerStats struct {
	Level                int32   `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Experience           int64   `protobuf:"varint,2,opt,name=experience" json:"experience,omitempty"`
	PrevLevelXp          int64   `protobuf:"varint,3,opt,name=prev_level_xp,json=prevLevelXp" json:"prev_level_xp,omitempty"`
	NextLevelXp          int64   `protobuf:"varint,4,opt,name=next_level_xp,json=nextLevelXp" json:"next_level_xp,omitempty"`
	KmWalked             float32 `protobuf:"fixed32,5,opt,name=km_walked,json=kmWalked" json:"km_walked,omitempty"`
	PokemonsEncountered  int32   `protobuf:"varint,6,opt,name=pokemons_encountered,json=pokemonsEncountered" json:"pokemons_encountered,omitempty"`
	UniquePokedexEntries int32   `protobuf:"varint,7,opt,name=unique_pokedex_entries,json=uniquePokedexEntries" json:"unique_pokedex_entries,omitempty"`
	PokemonsCaptured     int32   `protobuf:"varint,8,opt,name=pokemons_captured,json=pokemonsCaptured" json:"pokemons_captured,omitempty"`
	Evolutions           int32   `protobuf:"varint,9,opt,name=evolutions" json:"evolutions,omitempty"`
	PokeStopVisits       int32   `protobuf:"varint,10,opt,name=poke_stop_visits,json=pokeStopVisits" json:"poke_stop_visits,omitempty"`
	PokeballsThrown      int32   `protobuf:"varint,11,opt,name=pokeballs_thrown,json=pokeballsThrown" json:"pokeballs_thrown,omitempty"`
	EggsHatched          int32   `protobuf:"varint,12,opt,name=eggs_hatched,json=eggsHatched" json:"eggs_hatched,omitempty"`
	BigMagikarpCaught    int32   `protobuf:"varint,13,opt,name=big_magikarp_caught,json=bigMagikarpCaught" json:"big_magikarp_caught,omitempty"`
	BattleAttackWon      int32   `protobuf:"varint,14,opt,name=battle_attack_won,json=battleAttackWon" json:"battle_attack_won,omitempty"`
	BattleAttackTotal    int32   `protobuf:"varint,15,opt,name=battle_attack_total,json=battleAttackTotal" json:"battle_attack_total,omitempty"`
	BattleDefendedWon    int32   `protobuf:"varint,16,opt,name=battle_defended_won,json=battleDefendedWon" json:"battle_defended_won,omitempty"`
	BattleTrainingWon    int32   `protobuf:"varint,17,opt,name=battle_training_won,json=battleTrainingWon" json:"battle_training_won,omitempty"`
	BattleTrainingTotal  int32   `protobuf:"varint,18,opt,name=battle_training_total,json=battleTrainingTotal" json:"battle_training_total,omitempty"`
	PrestigeRaisedTotal  int32   `protobuf:"varint,19,opt,name=prestige_raised_total,json=prestigeRaisedTotal" json:"prestige_raised_total,omitempty"`
	PrestigeDroppedTotal int32   `protobuf:"varint,20,opt,name=prestige_dropped_total,json=prestigeDroppedTotal" json:"prestige_dropped_total,omitempty"`
	PokemonDeployed      int32   `protobuf:"varint,21,opt,name=pokemon_deployed,json=pokemonDeployed" json:"pokemon_deployed,omitempty"`
	PokemonCaughtByType  []byte  `protobuf:"bytes,22,opt,name=pokemon_caught_by_type,json=pokemonCaughtByType,proto3" json:"pokemon_caught_by_type,omitempty"`
	SmallRattataCaught   int32   `protobuf:"varint,23,opt,name=small_rattata_caught,json=smallRattataCaught" json:"small_rattata_caught,omitempty"`
}

func (m *PlayerStats) Reset()                    { *m = PlayerStats{} }
func (m *PlayerStats) String() string            { return proto.CompactTextString(m) }
func (*PlayerStats) ProtoMessage()               {}
func (*PlayerStats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Currency struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Amount int32  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *Currency) Reset()                    { *m = Currency{} }
func (m *Currency) String() string            { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()               {}
func (*Currency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type PlayerCurrency struct {
	Gems int32 `protobuf:"varint,1,opt,name=gems" json:"gems,omitempty"`
}

func (m *PlayerCurrency) Reset()                    { *m = PlayerCurrency{} }
func (m *PlayerCurrency) String() string            { return proto.CompactTextString(m) }
func (*PlayerCurrency) ProtoMessage()               {}
func (*PlayerCurrency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type PlayerCamera struct {
	IsDefaultCamera bool `protobuf:"varint,1,opt,name=is_default_camera,json=isDefaultCamera" json:"is_default_camera,omitempty"`
}

func (m *PlayerCamera) Reset()                    { *m = PlayerCamera{} }
func (m *PlayerCamera) String() string            { return proto.CompactTextString(m) }
func (*PlayerCamera) ProtoMessage()               {}
func (*PlayerCamera) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type PlayerPublicProfile struct {
	Name   string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Level  int32         `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Avatar *PlayerAvatar `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *PlayerPublicProfile) Reset()                    { *m = PlayerPublicProfile{} }
func (m *PlayerPublicProfile) String() string            { return proto.CompactTextString(m) }
func (*PlayerPublicProfile) ProtoMessage()               {}
func (*PlayerPublicProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PlayerPublicProfile) GetAvatar() *PlayerAvatar {
	if m != nil {
		return m.Avatar
	}
	return nil
}

type DailyBonus struct {
	NextCollectedTimestampMs            int64 `protobuf:"varint,1,opt,name=next_collected_timestamp_ms,json=nextCollectedTimestampMs" json:"next_collected_timestamp_ms,omitempty"`
	NextDefenderBonusCollectTimestampMs int64 `protobuf:"varint,2,opt,name=next_defender_bonus_collect_timestamp_ms,json=nextDefenderBonusCollectTimestampMs" json:"next_defender_bonus_collect_timestamp_ms,omitempty"`
}

func (m *DailyBonus) Reset()                    { *m = DailyBonus{} }
func (m *DailyBonus) String() string            { return proto.CompactTextString(m) }
func (*DailyBonus) ProtoMessage()               {}
func (*DailyBonus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*EquippedBadge)(nil), "POGOProtos.Data.Player.EquippedBadge")
	proto.RegisterType((*ContactSettings)(nil), "POGOProtos.Data.Player.ContactSettings")
	proto.RegisterType((*PlayerAvatar)(nil), "POGOProtos.Data.Player.PlayerAvatar")
	proto.RegisterType((*PlayerStats)(nil), "POGOProtos.Data.Player.PlayerStats")
	proto.RegisterType((*Currency)(nil), "POGOProtos.Data.Player.Currency")
	proto.RegisterType((*PlayerCurrency)(nil), "POGOProtos.Data.Player.PlayerCurrency")
	proto.RegisterType((*PlayerCamera)(nil), "POGOProtos.Data.Player.PlayerCamera")
	proto.RegisterType((*PlayerPublicProfile)(nil), "POGOProtos.Data.Player.PlayerPublicProfile")
	proto.RegisterType((*DailyBonus)(nil), "POGOProtos.Data.Player.DailyBonus")
}

func init() { proto.RegisterFile("data_player.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1038 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x55, 0x4f, 0x6f, 0xdb, 0x36,
	0x14, 0x9f, 0x9b, 0x26, 0x75, 0xe8, 0xfc, 0x65, 0x12, 0x57, 0x68, 0x80, 0x21, 0xf5, 0x8a, 0xc1,
	0xdb, 0x00, 0xa3, 0x4b, 0x8b, 0x1e, 0x8a, 0xed, 0x90, 0xd8, 0x41, 0x77, 0x58, 0x56, 0x4f, 0xc9,
	0xd6, 0x61, 0x17, 0x82, 0x92, 0x5e, 0x64, 0xc2, 0x12, 0xa9, 0x92, 0x54, 0x12, 0x1f, 0xfa, 0x65,
	0xf6, 0x19, 0xf6, 0xb1, 0x76, 0xda, 0x27, 0x18, 0xf8, 0x48, 0x39, 0x4a, 0x97, 0xdb, 0xe3, 0xef,
	0xcf, 0x13, 0xc9, 0xf7, 0xf4, 0x48, 0x76, 0x33, 0x6e, 0x39, 0xab, 0x0a, 0xbe, 0x00, 0x3d, 0xaa,
	0xb4, 0xb2, 0x8a, 0xf6, 0xa7, 0xef, 0xdf, 0xbd, 0x9f, 0xba, 0xd0, 0x8c, 0x26, 0xdc, 0xf2, 0xd1,
	0x14, 0xd9, 0x67, 0x3d, 0x90, 0x75, 0x69, 0xbc, 0x68, 0xf0, 0x77, 0x87, 0x6c, 0x9e, 0x7d, 0xac,
	0x45, 0x55, 0x41, 0x76, 0xca, 0xb3, 0x1c, 0xe8, 0x5b, 0x42, 0x12, 0x17, 0x30, 0xbb, 0xa8, 0x20,
	0xea, 0x1c, 0x75, 0x86, 0x5b, 0xc7, 0x87, 0xa3, 0x56, 0xae, 0x33, 0xb4, 0xa3, 0xf8, 0x72, 0x51,
	0x41, 0xbc, 0x9e, 0x34, 0x21, 0xdd, 0x27, 0xab, 0x05, 0x5c, 0x43, 0x11, 0x3d, 0x3a, 0xea, 0x0c,
	0x57, 0x63, 0xbf, 0xa0, 0xbf, 0x92, 0xaf, 0x25, 0xdc, 0x5a, 0x06, 0xee, 0x3b, 0x2c, 0x9d, 0x71,
	0x99, 0x03, 0xe3, 0x45, 0xa1, 0x6e, 0x20, 0x63, 0x56, 0x94, 0x60, 0x2c, 0x2f, 0x2b, 0x56, 0x9a,
	0x68, 0xe5, 0xa8, 0x33, 0x5c, 0x89, 0x9f, 0x3b, 0x35, 0x6e, 0x6a, 0x8c, 0xda, 0x13, 0x2f, 0xbd,
	0x6c, 0x94, 0xe7, 0x66, 0xf0, 0x89, 0x6c, 0x8f, 0x95, 0xb4, 0x3c, 0xb5, 0x17, 0x60, 0xad, 0x90,
	0xb9, 0xa1, 0xc7, 0xe4, 0xc0, 0x80, 0xcc, 0x58, 0xc9, 0xf5, 0x1c, 0x1c, 0xc4, 0xa0, 0xe4, 0xa2,
	0x30, 0x78, 0x84, 0x6e, 0xbc, 0xe7, 0xc8, 0xf3, 0x86, 0x3b, 0x43, 0x8a, 0xbe, 0x21, 0x4f, 0xd1,
	0x53, 0xd5, 0x66, 0xc6, 0xa4, 0xb2, 0xe2, 0x4a, 0xa4, 0xdc, 0x0a, 0x25, 0x0d, 0x9e, 0xa0, 0x1b,
	0x63, 0xca, 0x69, 0x6d, 0x66, 0xbf, 0xb4, 0xc9, 0xc1, 0x3f, 0x1d, 0xb2, 0xe1, 0x6f, 0xf3, 0xe4,
	0x9a, 0x5b, 0xae, 0x29, 0x25, 0x8f, 0xcd, 0x5c, 0xc8, 0x70, 0x6e, 0x8c, 0x1d, 0x36, 0xe3, 0x42,
	0xe3, 0xa1, 0x56, 0x63, 0x8c, 0xdd, 0x05, 0x99, 0x99, 0xd0, 0x36, 0x7a, 0xec, 0x2f, 0x08, 0x17,
	0x0e, 0xad, 0xb8, 0xb4, 0x26, 0x5a, 0xf5, 0x28, 0x2e, 0xe8, 0x0e, 0x59, 0x99, 0x71, 0x1b, 0xad,
	0x21, 0xe6, 0x42, 0xef, 0x56, 0x60, 0xa2, 0x27, 0x8d, 0x5b, 0x81, 0xa1, 0x2f, 0xc9, 0x5a, 0x0e,
	0x32, 0x03, 0x1d, 0x75, 0xb1, 0x58, 0xd1, 0xff, 0x8b, 0xf5, 0x0e, 0xf9, 0x38, 0xe8, 0xdc, 0xce,
	0x60, 0x01, 0x26, 0x5a, 0xf7, 0x3b, 0x73, 0x31, 0x7d, 0x46, 0xba, 0x09, 0x4f, 0xe7, 0x15, 0x4f,
	0xe7, 0x11, 0x41, 0x7c, 0xb9, 0x1e, 0xfc, 0xfb, 0x84, 0xf4, 0xfc, 0x71, 0x2f, 0x2c, 0xb7, 0xe6,
	0xae, 0xcc, 0x9d, 0x76, 0x99, 0xbf, 0x24, 0x04, 0x6e, 0x2b, 0xd0, 0x02, 0x64, 0x0a, 0x78, 0x13,
	0x2b, 0x71, 0x0b, 0xa1, 0x03, 0xb2, 0x59, 0x69, 0xb8, 0x66, 0xa8, 0x66, 0xb7, 0x55, 0xa8, 0x76,
	0xcf, 0x81, 0x3f, 0x3b, 0xec, 0x8f, 0xca, 0x69, 0xb0, 0x55, 0x96, 0x9a, 0xc7, 0x5e, 0xe3, 0xc0,
	0x46, 0x73, 0x48, 0xd6, 0xe7, 0x25, 0xbb, 0xe1, 0xc5, 0x1c, 0x32, 0xbc, 0xb1, 0x47, 0x71, 0x77,
	0x5e, 0x7e, 0xc0, 0x35, 0xfd, 0x9e, 0xec, 0x57, 0x6a, 0x0e, 0xa5, 0x92, 0x86, 0x81, 0x4c, 0x55,
	0x2d, 0x2d, 0x68, 0xc8, 0xc2, 0x2d, 0xee, 0x35, 0xdc, 0xd9, 0x1d, 0x45, 0x5f, 0x93, 0x7e, 0x2d,
	0xc5, 0xc7, 0x1a, 0x98, 0x63, 0x33, 0xb8, 0x65, 0x20, 0xad, 0x16, 0xcb, 0x6b, 0xde, 0xf7, 0xec,
	0xd4, 0x93, 0x67, 0x9e, 0xa3, 0xdf, 0x91, 0xdd, 0xe5, 0x87, 0x52, 0x5e, 0xd9, 0xda, 0x7d, 0xa5,
	0x8b, 0x86, 0x9d, 0x86, 0x18, 0x07, 0x1c, 0xaf, 0xe6, 0x5a, 0x15, 0xb5, 0x6f, 0x2d, 0x7f, 0xed,
	0x2d, 0x84, 0x0e, 0x09, 0x7a, 0x98, 0xb1, 0xaa, 0x62, 0xd7, 0xc2, 0x08, 0x6b, 0x42, 0x11, 0xb6,
	0x1c, 0x7e, 0x61, 0x55, 0xf5, 0x3b, 0xa2, 0xf4, 0x1b, 0xaf, 0x4c, 0x78, 0x51, 0x18, 0x66, 0x67,
	0x5a, 0xdd, 0xc8, 0xa8, 0x87, 0xca, 0xed, 0x25, 0x7e, 0x89, 0x30, 0x7d, 0x4e, 0x36, 0x20, 0xcf,
	0x0d, 0x9b, 0x71, 0x9b, 0xce, 0x20, 0x8b, 0x36, 0x50, 0xd6, 0x73, 0xd8, 0x4f, 0x1e, 0xa2, 0x23,
	0xb2, 0x97, 0x88, 0x9c, 0x95, 0x3c, 0x17, 0x73, 0xae, 0x2b, 0x96, 0xf2, 0x3a, 0x9f, 0xd9, 0x68,
	0x13, 0x95, 0xbb, 0x89, 0xc8, 0xcf, 0x03, 0x33, 0x46, 0x82, 0x7e, 0x4b, 0x76, 0x13, 0x6e, 0x6d,
	0x01, 0x8c, 0x5b, 0xcb, 0xd3, 0x39, 0xbb, 0x51, 0x32, 0xda, 0xf2, 0x9f, 0xf7, 0xc4, 0x09, 0xe2,
	0x1f, 0x94, 0xc4, 0xdc, 0xf7, 0xb4, 0x56, 0x59, 0x5e, 0x44, 0xdb, 0x21, 0x77, 0x4b, 0x7d, 0xe9,
	0x88, 0x96, 0x3e, 0x83, 0x2b, 0xd7, 0xa7, 0x19, 0x66, 0xdf, 0x69, 0xeb, 0x27, 0x81, 0xb9, 0x9f,
	0xdf, 0x6a, 0x2e, 0xa4, 0xfb, 0xe1, 0x9d, 0x7e, 0xb7, 0xad, 0xbf, 0x0c, 0x8c, 0xd3, 0x1f, 0x93,
	0x83, 0xcf, 0xf5, 0x7e, 0x47, 0xd4, 0xb7, 0xc6, 0x7d, 0x87, 0xdf, 0xd3, 0x31, 0x39, 0xa8, 0x34,
	0x18, 0x2b, 0x72, 0x60, 0x9a, 0x0b, 0xe3, 0xe6, 0x15, 0x7a, 0xf6, 0x42, 0x3b, 0x05, 0x32, 0x46,
	0xce, 0x7b, 0x5e, 0x93, 0xfe, 0xd2, 0x93, 0x69, 0xe5, 0x06, 0x6b, 0x30, 0xed, 0xfb, 0x76, 0x6a,
	0xd8, 0x89, 0x27, 0xbd, 0x2b, 0xd4, 0xb5, 0x54, 0x92, 0x65, 0x50, 0x15, 0x6a, 0x01, 0x59, 0x74,
	0x70, 0x57, 0xd7, 0x52, 0xc9, 0x49, 0x80, 0xe9, 0x2b, 0xd2, 0x6f, 0xa4, 0xbe, 0x5e, 0x2c, 0x59,
	0xf8, 0x61, 0xdd, 0x3f, 0xea, 0x0c, 0x37, 0x96, 0x4d, 0xee, 0x6b, 0x76, 0xba, 0xc0, 0xc9, 0xfc,
	0x92, 0xec, 0x9b, 0x92, 0x17, 0x05, 0xd3, 0xae, 0x1a, 0x96, 0x37, 0xa5, 0x7e, 0x8a, 0xdf, 0xa0,
	0xc8, 0xc5, 0x9e, 0xf2, 0xbe, 0xc1, 0x1b, 0xd2, 0x1d, 0xd7, 0x5a, 0x83, 0x4c, 0x17, 0x6e, 0x60,
	0x48, 0x5e, 0xfa, 0xd7, 0x60, 0x3d, 0xc6, 0x98, 0xf6, 0xc9, 0x1a, 0x2f, 0xdd, 0x4f, 0x14, 0x86,
	0x5e, 0x58, 0x0d, 0x5e, 0x90, 0x2d, 0x3f, 0x2b, 0xda, 0xee, 0x1c, 0x4a, 0x13, 0xa6, 0x05, 0xc6,
	0x83, 0xb7, 0xcd, 0x00, 0x1d, 0xf3, 0x12, 0x34, 0x77, 0x9d, 0x25, 0x8c, 0xab, 0x3c, 0xaf, 0x0b,
	0xcb, 0x52, 0x04, 0xc3, 0xe4, 0xde, 0x16, 0x66, 0xe2, 0x71, 0xaf, 0x1d, 0x7c, 0x22, 0x7b, 0xde,
	0x3b, 0xad, 0x93, 0x42, 0xa4, 0x53, 0xad, 0xae, 0x44, 0x01, 0x0f, 0x6e, 0xf2, 0xe1, 0x07, 0xe9,
	0x07, 0xb2, 0xc6, 0x71, 0x6e, 0xe3, 0x08, 0xea, 0x1d, 0xbf, 0x18, 0x3d, 0xfc, 0x54, 0x8e, 0xda,
	0x33, 0x3e, 0x0e, 0x9e, 0xc1, 0x5f, 0x1d, 0x42, 0x26, 0x5c, 0x14, 0x8b, 0x53, 0x25, 0x6b, 0x43,
	0x7f, 0x24, 0x87, 0x38, 0xb2, 0x52, 0x55, 0x14, 0x90, 0xda, 0xcf, 0x9f, 0xb4, 0x0e, 0x0e, 0xb0,
	0xc8, 0x49, 0xc6, 0x8d, 0xa2, 0xf5, 0x92, 0xd1, 0xdf, 0xc8, 0x10, 0xed, 0xa1, 0xe9, 0x35, 0x4b,
	0x5c, 0xd6, 0x26, 0xdb, 0xfd, 0x5c, 0x7e, 0xa6, 0x7e, 0xe5, 0xf4, 0xe1, 0x4f, 0xd0, 0xb8, 0x87,
	0x90, 0xb8, 0x95, 0xf6, 0xb4, 0xfb, 0xe7, 0x1a, 0x3e, 0xf0, 0x66, 0xfa, 0x45, 0xe2, 0xa3, 0x57,
	0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x8a, 0x14, 0x31, 0x24, 0x08, 0x00, 0x00,
}
