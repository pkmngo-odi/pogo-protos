// Code generated by protoc-gen-go.
// source: networking_requests.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RequestType int32

const (
	RequestType_METHOD_UNSET                   RequestType = 0
	RequestType_PLAYER_UPDATE                  RequestType = 1
	RequestType_GET_PLAYER                     RequestType = 2
	RequestType_GET_INVENTORY                  RequestType = 4
	RequestType_DOWNLOAD_SETTINGS              RequestType = 5
	RequestType_DOWNLOAD_ITEM_TEMPLATES        RequestType = 6
	RequestType_DOWNLOAD_REMOTE_CONFIG_VERSION RequestType = 7
	RequestType_FORT_SEARCH                    RequestType = 101
	RequestType_ENCOUNTER                      RequestType = 102
	RequestType_CATCH_POKEMON                  RequestType = 103
	RequestType_FORT_DETAILS                   RequestType = 104
	RequestType_ITEM_USE                       RequestType = 105
	RequestType_GET_MAP_OBJECTS                RequestType = 106
	RequestType_FORT_DEPLOY_POKEMON            RequestType = 110
	RequestType_FORT_RECALL_POKEMON            RequestType = 111
	RequestType_RELEASE_POKEMON                RequestType = 112
	RequestType_USE_ITEM_POTION                RequestType = 113
	RequestType_USE_ITEM_CAPTURE               RequestType = 114
	RequestType_USE_ITEM_FLEE                  RequestType = 115
	RequestType_USE_ITEM_REVIVE                RequestType = 116
	RequestType_TRADE_SEARCH                   RequestType = 117
	RequestType_TRADE_OFFER                    RequestType = 118
	RequestType_TRADE_RESPONSE                 RequestType = 119
	RequestType_TRADE_RESULT                   RequestType = 120
	RequestType_GET_PLAYER_PROFILE             RequestType = 121
	RequestType_GET_ITEM_PACK                  RequestType = 122
	RequestType_BUY_ITEM_PACK                  RequestType = 123
	RequestType_BUY_GEM_PACK                   RequestType = 124
	RequestType_EVOLVE_POKEMON                 RequestType = 125
	RequestType_GET_HATCHED_EGGS               RequestType = 126
	RequestType_ENCOUNTER_TUTORIAL_COMPLETE    RequestType = 127
	RequestType_LEVEL_UP_REWARDS               RequestType = 128
	RequestType_CHECK_AWARDED_BADGES           RequestType = 129
	RequestType_USE_ITEM_GYM                   RequestType = 133
	RequestType_GET_GYM_DETAILS                RequestType = 134
	RequestType_START_GYM_BATTLE               RequestType = 135
	RequestType_ATTACK_GYM                     RequestType = 136
	RequestType_RECYCLE_INVENTORY_ITEM         RequestType = 137
	RequestType_COLLECT_DAILY_BONUS            RequestType = 138
	RequestType_USE_ITEM_XP_BOOST              RequestType = 139
	RequestType_USE_ITEM_EGG_INCUBATOR         RequestType = 140
	RequestType_USE_INCENSE                    RequestType = 141
	RequestType_GET_INCENSE_POKEMON            RequestType = 142
	RequestType_INCENSE_ENCOUNTER              RequestType = 143
	RequestType_ADD_FORT_MODIFIER              RequestType = 144
	RequestType_DISK_ENCOUNTER                 RequestType = 145
	RequestType_COLLECT_DAILY_DEFENDER_BONUS   RequestType = 146
	RequestType_UPGRADE_POKEMON                RequestType = 147
	RequestType_SET_FAVORITE_POKEMON           RequestType = 148
	RequestType_NICKNAME_POKEMON               RequestType = 149
	RequestType_EQUIP_BADGE                    RequestType = 150
	RequestType_SET_CONTACT_SETTINGS           RequestType = 151
	RequestType_GET_ASSET_DIGEST               RequestType = 300
	RequestType_GET_DOWNLOAD_URLS              RequestType = 301
	RequestType_GET_SUGGESTED_CODENAMES        RequestType = 401
	RequestType_CHECK_CODENAME_AVAILABLE       RequestType = 402
	RequestType_CLAIM_CODENAME                 RequestType = 403
	RequestType_SET_AVATAR                     RequestType = 404
	RequestType_SET_PLAYER_TEAM                RequestType = 405
	RequestType_MARK_TUTORIAL_COMPLETE         RequestType = 406
	RequestType_LOAD_SPAWN_POINTS              RequestType = 500
	RequestType_ECHO                           RequestType = 666
	RequestType_DEBUG_UPDATE_INVENTORY         RequestType = 700
	RequestType_DEBUG_DELETE_PLAYER            RequestType = 701
	RequestType_SFIDA_REGISTRATION             RequestType = 800
	RequestType_SFIDA_ACTION_LOG               RequestType = 801
	RequestType_SFIDA_CERTIFICATION            RequestType = 802
	RequestType_SFIDA_UPDATE                   RequestType = 803
	RequestType_SFIDA_ACTION                   RequestType = 804
	RequestType_SFIDA_DOWSER                   RequestType = 805
	RequestType_SFIDA_CAPTURE                  RequestType = 806
)

var RequestType_name = map[int32]string{
	0:   "METHOD_UNSET",
	1:   "PLAYER_UPDATE",
	2:   "GET_PLAYER",
	4:   "GET_INVENTORY",
	5:   "DOWNLOAD_SETTINGS",
	6:   "DOWNLOAD_ITEM_TEMPLATES",
	7:   "DOWNLOAD_REMOTE_CONFIG_VERSION",
	101: "FORT_SEARCH",
	102: "ENCOUNTER",
	103: "CATCH_POKEMON",
	104: "FORT_DETAILS",
	105: "ITEM_USE",
	106: "GET_MAP_OBJECTS",
	110: "FORT_DEPLOY_POKEMON",
	111: "FORT_RECALL_POKEMON",
	112: "RELEASE_POKEMON",
	113: "USE_ITEM_POTION",
	114: "USE_ITEM_CAPTURE",
	115: "USE_ITEM_FLEE",
	116: "USE_ITEM_REVIVE",
	117: "TRADE_SEARCH",
	118: "TRADE_OFFER",
	119: "TRADE_RESPONSE",
	120: "TRADE_RESULT",
	121: "GET_PLAYER_PROFILE",
	122: "GET_ITEM_PACK",
	123: "BUY_ITEM_PACK",
	124: "BUY_GEM_PACK",
	125: "EVOLVE_POKEMON",
	126: "GET_HATCHED_EGGS",
	127: "ENCOUNTER_TUTORIAL_COMPLETE",
	128: "LEVEL_UP_REWARDS",
	129: "CHECK_AWARDED_BADGES",
	133: "USE_ITEM_GYM",
	134: "GET_GYM_DETAILS",
	135: "START_GYM_BATTLE",
	136: "ATTACK_GYM",
	137: "RECYCLE_INVENTORY_ITEM",
	138: "COLLECT_DAILY_BONUS",
	139: "USE_ITEM_XP_BOOST",
	140: "USE_ITEM_EGG_INCUBATOR",
	141: "USE_INCENSE",
	142: "GET_INCENSE_POKEMON",
	143: "INCENSE_ENCOUNTER",
	144: "ADD_FORT_MODIFIER",
	145: "DISK_ENCOUNTER",
	146: "COLLECT_DAILY_DEFENDER_BONUS",
	147: "UPGRADE_POKEMON",
	148: "SET_FAVORITE_POKEMON",
	149: "NICKNAME_POKEMON",
	150: "EQUIP_BADGE",
	151: "SET_CONTACT_SETTINGS",
	300: "GET_ASSET_DIGEST",
	301: "GET_DOWNLOAD_URLS",
	401: "GET_SUGGESTED_CODENAMES",
	402: "CHECK_CODENAME_AVAILABLE",
	403: "CLAIM_CODENAME",
	404: "SET_AVATAR",
	405: "SET_PLAYER_TEAM",
	406: "MARK_TUTORIAL_COMPLETE",
	500: "LOAD_SPAWN_POINTS",
	666: "ECHO",
	700: "DEBUG_UPDATE_INVENTORY",
	701: "DEBUG_DELETE_PLAYER",
	800: "SFIDA_REGISTRATION",
	801: "SFIDA_ACTION_LOG",
	802: "SFIDA_CERTIFICATION",
	803: "SFIDA_UPDATE",
	804: "SFIDA_ACTION",
	805: "SFIDA_DOWSER",
	806: "SFIDA_CAPTURE",
}
var RequestType_value = map[string]int32{
	"METHOD_UNSET":                   0,
	"PLAYER_UPDATE":                  1,
	"GET_PLAYER":                     2,
	"GET_INVENTORY":                  4,
	"DOWNLOAD_SETTINGS":              5,
	"DOWNLOAD_ITEM_TEMPLATES":        6,
	"DOWNLOAD_REMOTE_CONFIG_VERSION": 7,
	"FORT_SEARCH":                    101,
	"ENCOUNTER":                      102,
	"CATCH_POKEMON":                  103,
	"FORT_DETAILS":                   104,
	"ITEM_USE":                       105,
	"GET_MAP_OBJECTS":                106,
	"FORT_DEPLOY_POKEMON":            110,
	"FORT_RECALL_POKEMON":            111,
	"RELEASE_POKEMON":                112,
	"USE_ITEM_POTION":                113,
	"USE_ITEM_CAPTURE":               114,
	"USE_ITEM_FLEE":                  115,
	"USE_ITEM_REVIVE":                116,
	"TRADE_SEARCH":                   117,
	"TRADE_OFFER":                    118,
	"TRADE_RESPONSE":                 119,
	"TRADE_RESULT":                   120,
	"GET_PLAYER_PROFILE":             121,
	"GET_ITEM_PACK":                  122,
	"BUY_ITEM_PACK":                  123,
	"BUY_GEM_PACK":                   124,
	"EVOLVE_POKEMON":                 125,
	"GET_HATCHED_EGGS":               126,
	"ENCOUNTER_TUTORIAL_COMPLETE":    127,
	"LEVEL_UP_REWARDS":               128,
	"CHECK_AWARDED_BADGES":           129,
	"USE_ITEM_GYM":                   133,
	"GET_GYM_DETAILS":                134,
	"START_GYM_BATTLE":               135,
	"ATTACK_GYM":                     136,
	"RECYCLE_INVENTORY_ITEM":         137,
	"COLLECT_DAILY_BONUS":            138,
	"USE_ITEM_XP_BOOST":              139,
	"USE_ITEM_EGG_INCUBATOR":         140,
	"USE_INCENSE":                    141,
	"GET_INCENSE_POKEMON":            142,
	"INCENSE_ENCOUNTER":              143,
	"ADD_FORT_MODIFIER":              144,
	"DISK_ENCOUNTER":                 145,
	"COLLECT_DAILY_DEFENDER_BONUS":   146,
	"UPGRADE_POKEMON":                147,
	"SET_FAVORITE_POKEMON":           148,
	"NICKNAME_POKEMON":               149,
	"EQUIP_BADGE":                    150,
	"SET_CONTACT_SETTINGS":           151,
	"GET_ASSET_DIGEST":               300,
	"GET_DOWNLOAD_URLS":              301,
	"GET_SUGGESTED_CODENAMES":        401,
	"CHECK_CODENAME_AVAILABLE":       402,
	"CLAIM_CODENAME":                 403,
	"SET_AVATAR":                     404,
	"SET_PLAYER_TEAM":                405,
	"MARK_TUTORIAL_COMPLETE":         406,
	"LOAD_SPAWN_POINTS":              500,
	"ECHO":                           666,
	"DEBUG_UPDATE_INVENTORY": 700,
	"DEBUG_DELETE_PLAYER":    701,
	"SFIDA_REGISTRATION":     800,
	"SFIDA_ACTION_LOG":       801,
	"SFIDA_CERTIFICATION":    802,
	"SFIDA_UPDATE":           803,
	"SFIDA_ACTION":           804,
	"SFIDA_DOWSER":           805,
	"SFIDA_CAPTURE":          806,
}

func (x RequestType) String() string {
	return proto.EnumName(RequestType_name, int32(x))
}
func (RequestType) EnumDescriptor() ([]byte, []int) { return fileDescriptor18, []int{0} }

type Request struct {
	RequestType    RequestType `protobuf:"varint,1,opt,name=request_type,json=requestType,enum=POGOProtos.Networking.Requests.RequestType" json:"request_type,omitempty"`
	RequestMessage []byte      `protobuf:"bytes,2,opt,name=request_message,json=requestMessage,proto3" json:"request_message,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{0} }

func init() {
	proto.RegisterType((*Request)(nil), "POGOProtos.Networking.Requests.Request")
	proto.RegisterEnum("POGOProtos.Networking.Requests.RequestType", RequestType_name, RequestType_value)
}

func init() { proto.RegisterFile("networking_requests.proto", fileDescriptor18) }

var fileDescriptor18 = []byte{
	// 1028 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x95, 0xcb, 0x72, 0x1b, 0x45,
	0x17, 0xc7, 0xbf, 0xb1, 0x62, 0x25, 0x69, 0xcb, 0xf6, 0x71, 0xdb, 0xb1, 0x9d, 0x72, 0xbe, 0x10,
	0xb2, 0x21, 0x05, 0x55, 0x5e, 0xc0, 0x13, 0xb4, 0xba, 0xcf, 0x8c, 0x1a, 0xf5, 0x4c, 0x0f, 0xdd,
	0x3d, 0x32, 0x62, 0xd3, 0x05, 0x55, 0xc2, 0x04, 0x0a, 0xdb, 0xb1, 0x1c, 0x82, 0xb9, 0x43, 0x15,
	0xf7, 0x6b, 0xae, 0x54, 0xb1, 0xe2, 0xbe, 0x82, 0x37, 0x80, 0x05, 0xef, 0xc4, 0x03, 0x50, 0xdd,
	0x23, 0x8d, 0x94, 0x2a, 0x8a, 0x95, 0x66, 0x7e, 0xa7, 0xcf, 0xbf, 0xcf, 0x6d, 0x8e, 0xc8, 0xc5,
	0x83, 0xd1, 0xc9, 0xad, 0xc3, 0xe3, 0x57, 0xae, 0x1f, 0xec, 0xfb, 0xe3, 0xd1, 0x8d, 0x9b, 0xa3,
	0xf1, 0xc9, 0x78, 0xf7, 0xe8, 0xf8, 0xf0, 0xe4, 0x90, 0x5e, 0x2e, 0x75, 0xa6, 0xcb, 0xf0, 0x38,
	0xde, 0x2d, 0x9a, 0x53, 0xbb, 0x66, 0x72, 0xea, 0xea, 0x07, 0x09, 0x39, 0x3b, 0x79, 0xa1, 0x05,
	0xe9, 0x4c, 0xbc, 0xfd, 0xc9, 0xe9, 0xd1, 0x68, 0x3b, 0xb9, 0x92, 0x5c, 0x5b, 0x79, 0xf2, 0x89,
	0xdd, 0xff, 0x96, 0x98, 0x3e, 0xb8, 0xd3, 0xa3, 0x91, 0x59, 0x3a, 0x9e, 0xbd, 0xd0, 0xc7, 0xc8,
	0xea, 0x54, 0xef, 0xd5, 0xd1, 0x78, 0xfc, 0xfc, 0xfe, 0x68, 0x7b, 0xe1, 0x4a, 0x72, 0xad, 0x63,
	0x56, 0x26, 0x38, 0xaf, 0xe9, 0xe3, 0x7f, 0x75, 0xc8, 0xd2, 0x9c, 0x0a, 0x05, 0xd2, 0xc9, 0xd1,
	0xf5, 0xb4, 0xf0, 0x55, 0x61, 0xd1, 0xc1, 0xff, 0xe8, 0x1a, 0x59, 0x2e, 0x15, 0x1b, 0xa2, 0xf1,
	0x55, 0x29, 0x98, 0x43, 0x48, 0xe8, 0x0a, 0x21, 0x19, 0x3a, 0x5f, 0x63, 0x58, 0x08, 0x47, 0xc2,
	0xbb, 0x2c, 0x06, 0x58, 0x38, 0x6d, 0x86, 0x70, 0x86, 0x5e, 0x20, 0x6b, 0x42, 0xef, 0x15, 0x4a,
	0x33, 0xe1, 0x2d, 0x3a, 0x27, 0x8b, 0xcc, 0xc2, 0x22, 0xdd, 0x21, 0x5b, 0x0d, 0x96, 0x0e, 0x73,
	0xef, 0x30, 0x2f, 0x15, 0x73, 0x68, 0xa1, 0x4d, 0xaf, 0x92, 0xcb, 0x8d, 0xd1, 0x60, 0xae, 0x1d,
	0x7a, 0xae, 0x8b, 0x54, 0x66, 0x7e, 0x80, 0xc6, 0x4a, 0x5d, 0xc0, 0x59, 0xba, 0x4a, 0x96, 0x52,
	0x6d, 0x9c, 0xb7, 0xc8, 0x0c, 0xef, 0xc1, 0x88, 0x2e, 0x93, 0xf3, 0x58, 0x70, 0x5d, 0x15, 0x0e,
	0x0d, 0xbc, 0x18, 0x42, 0xe1, 0xcc, 0xf1, 0x9e, 0x2f, 0x75, 0x1f, 0x73, 0x5d, 0xc0, 0x7e, 0x48,
	0x29, 0xba, 0x08, 0x74, 0x4c, 0x2a, 0x0b, 0x2f, 0xd1, 0x0e, 0x39, 0x17, 0x2f, 0xaf, 0x2c, 0xc2,
	0x75, 0xba, 0x4e, 0x56, 0x43, 0xf4, 0x39, 0x2b, 0xbd, 0xee, 0x3e, 0x8d, 0xdc, 0x59, 0x78, 0x99,
	0x6e, 0x91, 0xf5, 0x89, 0x53, 0xa9, 0xf4, 0xb0, 0x51, 0x3b, 0x68, 0x0c, 0x06, 0x39, 0x53, 0xaa,
	0x31, 0x1c, 0x06, 0x19, 0x83, 0x0a, 0x99, 0xc5, 0x06, 0x1e, 0x05, 0x58, 0x59, 0xac, 0x53, 0x2d,
	0xb5, 0x0b, 0x39, 0xdc, 0xa0, 0x1b, 0x04, 0x1a, 0xc8, 0x59, 0xe9, 0x2a, 0x83, 0x70, 0x1c, 0x22,
	0x6f, 0x68, 0xaa, 0x10, 0x61, 0xfc, 0x90, 0xb7, 0xc1, 0x81, 0x1c, 0x20, 0x9c, 0x84, 0x74, 0x9c,
	0x61, 0x02, 0xa7, 0x25, 0xb8, 0x19, 0x6a, 0x52, 0x13, 0x9d, 0xa6, 0x68, 0xe0, 0x35, 0x4a, 0xc9,
	0x4a, 0x0d, 0x0c, 0xda, 0x52, 0x17, 0x16, 0xe1, 0xd6, 0xcc, 0xcd, 0xa0, 0xad, 0x94, 0x83, 0xd7,
	0xe9, 0x26, 0xa1, 0xb3, 0x2e, 0xfa, 0xd2, 0xe8, 0x54, 0x2a, 0x84, 0xd3, 0xa6, 0x9b, 0x31, 0x66,
	0xc6, 0xfb, 0xf0, 0x46, 0x40, 0xdd, 0x6a, 0x38, 0x87, 0xde, 0x0c, 0x7a, 0x01, 0x65, 0x53, 0xf2,
	0x56, 0xb8, 0x15, 0x07, 0x5a, 0x0d, 0x66, 0xf9, 0xbf, 0x1d, 0x52, 0x0d, 0x5a, 0xbd, 0xd0, 0x12,
	0x14, 0x1e, 0xb3, 0xcc, 0xc2, 0x3b, 0xf4, 0x11, 0xb2, 0xd3, 0xf4, 0xcc, 0xbb, 0xca, 0x69, 0x23,
	0x99, 0xf2, 0x5c, 0xe7, 0xa5, 0x42, 0x87, 0xf0, 0x2e, 0xbd, 0x40, 0x40, 0xe1, 0x00, 0x95, 0xaf,
	0x4a, 0x6f, 0x70, 0x8f, 0x19, 0x61, 0xe1, 0xbd, 0x84, 0x5e, 0x24, 0x1b, 0xbc, 0x87, 0xbc, 0xef,
	0x59, 0x40, 0x28, 0x7c, 0x97, 0x89, 0x0c, 0x2d, 0xbc, 0x9f, 0xd0, 0x35, 0xd2, 0x69, 0x4a, 0x95,
	0x0d, 0x73, 0xf8, 0x30, 0xa1, 0x1b, 0x75, 0x5f, 0xb3, 0x61, 0xde, 0xb4, 0xfe, 0xa3, 0x24, 0x48,
	0x5b, 0xc7, 0x4c, 0xcd, 0xbb, 0xcc, 0x39, 0x85, 0xf0, 0x71, 0x42, 0x57, 0x09, 0x61, 0xce, 0x31,
	0xde, 0x8f, 0xde, 0x9f, 0x24, 0x74, 0x87, 0x6c, 0x1a, 0xe4, 0x43, 0xae, 0x70, 0x36, 0xd7, 0x51,
	0x1e, 0x3e, 0x4d, 0xe8, 0x36, 0x59, 0xe7, 0x5a, 0x29, 0xe4, 0xce, 0x0b, 0x26, 0xd5, 0xd0, 0x77,
	0x75, 0x51, 0x59, 0xf8, 0x2c, 0xa1, 0x9b, 0x64, 0xad, 0x89, 0xe3, 0xd9, 0xd2, 0x77, 0xb5, 0xb6,
	0x0e, 0x3e, 0x8f, 0x72, 0x0d, 0xc7, 0x2c, 0xf3, 0xb2, 0xe0, 0x55, 0x97, 0x39, 0x6d, 0xe0, 0x8b,
	0x84, 0x02, 0x59, 0x8a, 0xc6, 0x82, 0x63, 0x68, 0xd6, 0x97, 0xf1, 0x82, 0xfa, 0x8b, 0x8a, 0xa4,
	0x29, 0xe8, 0x57, 0xf1, 0x82, 0x29, 0x9d, 0xcd, 0xfd, 0xd7, 0x91, 0x33, 0x21, 0x7c, 0x9c, 0xcd,
	0x5c, 0x0b, 0x99, 0x4a, 0x34, 0xf0, 0x4d, 0x42, 0xd7, 0xc9, 0x8a, 0x90, 0xb6, 0x3f, 0x77, 0xf8,
	0x76, 0x42, 0x1f, 0x25, 0x97, 0x1e, 0x8e, 0x5f, 0x60, 0x8a, 0x85, 0x40, 0x33, 0x49, 0xe4, 0x4e,
	0xac, 0x5e, 0x55, 0x66, 0x71, 0x62, 0xa6, 0xb7, 0xdf, 0x8d, 0x1d, 0xb0, 0xe8, 0x7c, 0xca, 0x06,
	0xda, 0x48, 0x37, 0x33, 0xdd, 0x8b, 0x85, 0x2d, 0x24, 0xef, 0x17, 0x2c, 0x9f, 0xe1, 0xfb, 0x31,
	0x37, 0x7c, 0xa6, 0x92, 0x65, 0xdd, 0x2b, 0x78, 0xd0, 0x68, 0x70, 0x5d, 0x38, 0xc6, 0xdd, 0x6c,
	0x3b, 0x7c, 0x1b, 0x35, 0x42, 0xda, 0xcc, 0x86, 0x03, 0x42, 0x66, 0x68, 0x1d, 0xfc, 0xb6, 0x10,
	0x72, 0x0b, 0xb8, 0x59, 0x0e, 0x95, 0x51, 0x16, 0x7e, 0x5f, 0xa0, 0x97, 0xc8, 0x56, 0xe0, 0xb6,
	0xca, 0xc2, 0x49, 0x14, 0x9e, 0x6b, 0x81, 0x21, 0x00, 0x0b, 0xb7, 0x5b, 0xf4, 0xff, 0x64, 0xbb,
	0x9e, 0x96, 0x29, 0xf5, 0x6c, 0xc0, 0xa4, 0x62, 0x5d, 0x85, 0x70, 0xa7, 0x15, 0x0a, 0xc3, 0x15,
	0x93, 0x79, 0x63, 0x86, 0xbb, 0xad, 0x30, 0x06, 0xe1, 0x6a, 0x36, 0x60, 0x8e, 0x19, 0xb8, 0xd7,
	0x0a, 0x65, 0xb0, 0xb3, 0x8f, 0xc4, 0x21, 0xcb, 0xe1, 0x7e, 0x2b, 0x74, 0x33, 0x67, 0xa6, 0xff,
	0x2f, 0xb3, 0xfb, 0xa0, 0x15, 0xa2, 0xad, 0xd7, 0x5e, 0xc9, 0xf6, 0x0a, 0x5f, 0x6a, 0x59, 0x38,
	0x0b, 0x7f, 0xb7, 0xe8, 0x79, 0x72, 0x06, 0x79, 0x4f, 0xc3, 0x77, 0x61, 0x0d, 0x6e, 0x0a, 0xec,
	0x56, 0xd9, 0x64, 0xa5, 0xce, 0x6d, 0xce, 0x3f, 0x16, 0x43, 0xef, 0x6b, 0xa3, 0xc0, 0x20, 0x39,
	0x5d, 0xb3, 0x7f, 0x2e, 0xd2, 0x2d, 0x42, 0x6d, 0x2a, 0x05, 0xf3, 0x06, 0x33, 0x69, 0x9d, 0x61,
	0x71, 0xa1, 0x7c, 0xdf, 0x8e, 0x43, 0x1d, 0x0d, 0x8c, 0x07, 0xe4, 0x95, 0xce, 0xe0, 0x87, 0x76,
	0x50, 0xaa, 0x31, 0x47, 0xe3, 0x64, 0x2a, 0x79, 0xed, 0xf0, 0x63, 0x3b, 0x7c, 0x2e, 0xb5, 0x65,
	0xb2, 0xd3, 0x7f, 0x9a, 0x43, 0xb5, 0x06, 0xfc, 0x3c, 0x87, 0x84, 0xde, 0xb3, 0x68, 0xe0, 0x97,
	0x36, 0xa5, 0x64, 0x79, 0x22, 0x39, 0x59, 0x5c, 0xbf, 0xb6, 0xbb, 0xe7, 0x9e, 0x6b, 0xc7, 0x7f,
	0xbc, 0xf1, 0x0b, 0xf5, 0xef, 0x53, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x66, 0x55, 0x88,
	0x16, 0x07, 0x00, 0x00,
}
